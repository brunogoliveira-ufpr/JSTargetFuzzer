function f0() {
    const o16 = {
        "e": 16,
        "c": 16,
        "b": "symbol",
        2: 3.0,
        m(a5) {
            let v8 = 255;
            const v10 = v8--;
            const v11 = v10 | -1.0;
            const v12 = -1.0 >> v10;
            ~a5;
            v12 & v11;
            v10 + v12;
            return a5;
        },
    };
    return o16;
}
const v17 = f0();
const v18 = f0();
const v19 = f0();
const v20 = [0.4424836940719119,1.7286201401026001e+308,-2.2250738585072014e-308,-1.6479947332849071e+308];
const v21 = [2.1402813232601053e+306];
const v22 = [1000000000000.0];
const v23 = [v17,v21,v21,v17];
const v24 = [f0,v17,v21];
let v25 = [v18,v17,v24];
const v26 = [1.7976931348623157e+308,-5.510213996610737,-3.0,2.220446049250313e-16,-0.4735907948525515,-4.894533662628573,1.0083497986833395e+308,-1e-15,9.65699816955886e+307,-1.1133564539221695e+308];
const v27 = [Infinity,-1.7976931348623157e+308,-764.3547993476348,502.4156789177391,1e-15,-1000000000.0];
const v28 = [2.220446049250313e-16,90635.65543343383,-628153.5942362027];
function F29(a31, a32, a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a33;
    this.g = a31;
    this.f = v22;
}
const v35 = new F29(v24, v19, v20, v28);
const v36 = new F29(v26, v19, v21, v27);
new F29(v23, v17, v28, v22);
switch (F29) {
    case v20:
        const v38 = [v23,v36,v24,v18];
        [[v35,v38,v24,v38],v27];
        break;
}
v26 * (v25 <<= v23);
[] = v26;
