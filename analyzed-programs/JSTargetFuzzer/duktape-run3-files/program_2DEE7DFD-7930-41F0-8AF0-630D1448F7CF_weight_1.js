const v3 = [0.0];
[-548502.6786432652,605895.5589482924,-8.697440798364102,383.49230062408265,-1000000000000.0,0.5659945958021565,0.14893509239082603,-2.220446049250313e-16];
const v5 = [1.0];
function f6() {
    return v3;
}
function F7(a9, a10, a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = v3;
}
new F7(v3, 1, -27686, -27686);
new F7(v5, -1855466084, -27686, v3);
new F7(v3, 1, -1855466084, v5);
const v25 = [2.2250738585072014e-308,-2.2250738585072014e-308,-1e-15,3.7959181805650056e+307,503.3474853731134,1000000.0,0.5952140999109389,Infinity];
const v26 = [1000000000000.0,1000000000.0,NaN];
const v27 = [2.2250738585072014e-308,-771.7611238159932,-1.7976931348623157e+308,-338138.3881191445,0.26390886866937446];
function F28(a30, a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = 7;
    this.b = v3;
    this.c = a30;
}
const v33 = new F28(128, 7, "object");
const v34 = new F28(-1572899236, -4096, "qJ");
const v35 = new F28(-1572899236, -4096, "qJ");
v35[v27] = v35;
v26.toString = v27;
try { v25.at(534544680); } catch (e) {}
delete v34[3];
try { ("qJ").slice(7, 128); } catch (e) {}
function f39(a40, a41, a42, a43) {
    return -4294967297;
}
f39("object", "qJ", -27478, v33);
