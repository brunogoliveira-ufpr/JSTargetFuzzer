function f0() {
    const o17 = {
        268435439: "n",
        "d": 0.4055717136332444,
        p(a5, a6) {
            const t5 = "n";
            delete t5[6];
            [11612.830259165145,0.7297070674007551,-5.5108917422524755];
            [8.329306338355767];
            [0.1883113064848434,0.5317795082667666,1000.0,0.8798320060145366,658271.9022086491,0.40478330226424275,-1.0,-1000000.0,Infinity,1000000000.0];
            return a6;
        },
        set c(a12) {
            let v13;
            try { v13 = ("n").concat(a12, "n", 0.4055717136332444, this, 561967278); } catch (e) {}
            const v14 = [a12,v13,v13];
            [[0.4055717136332444,"n"],v14,v13];
        },
    };
    return o17;
}
const v18 = f0();
const v19 = f0();
const v20 = f0();
function f30(a31, a32) {
    const o33 = {
        ...v18,
        __proto__: v19,
        [a32]: -2,
        "c": v19,
        "b": Infinity,
        [f0]: a31,
        "f": -1.9124025820621746,
        "g": a32,
        1: v19,
        [5.0]: a31,
        536870887: 1073741824,
        "e": a32,
        "h": f0,
        "a": v20,
    };
    return o33;
}
f30(f30(638717.5664824909, 0.0), 3.0);
f30(-2, 0.0);
const t43 = f0();
t43.valueOf = f0;
let v38 = 0;
do {
    function F39(a41, a42) {
        if (!new.target) { throw 'must be called with new'; }
        this.h = 0.0;
        this.a = Infinity;
        this.g = -1.9124025820621746;
    }
    const v43 = new F39(f0, 0.0);
    new F39(3.0, 1073741824);
    new F39(638717.5664824909, v43);
    v38++;
} while (v38 < 7)
