const v3 = [5.0,-0.0,978.8080872528169,1.4983135056882695];
[-1000000000.0,1.7548812637106265e+308,NaN,-1.7600406210326885e+308,-1.669196336941784e+308,-64.133717011704,1000000.0,-4.760758440442312,-1000.0];
const v5 = [-0.0,-268.9121918996759,-294.55184289802185,1000000.0,292710.07218996575,-1000000000.0,-5.0,5.0,-1.7413485042252916e+308];
[5.0,3.0];
const v7 = [-5.0,Infinity,5.163862567230354e+307,-1.0,0.18953800752574457,1000000000.0,-2.2250738585072014e-308,-8.846498476386478e+307,0.9798487420616718];
const v8 = [NaN,NaN,0.3644475814492014,202861.1166225099,5.0,2.220446049250313e-16,-1000000000.0];
const v9 = [15,15,15,v5];
const v10 = [15,v9,15,v3,v9];
[4,v7,v3,15];
new Float64Array(3105);
new Uint8Array(3760);
let v19 = Int16Array;
const v20 = new v19(64);
async function f21(a22, a23, a24, a25) {
    'use strict';
    let v26;
    try { v26 = a22.lastIndexOf(v8, a25); } catch (e) {}
    try { v26(a25, a25, v26, 64, a25); } catch (e) {}
    await v26;
    return v10;
}
f21(v8, 3760, 4, 3105);
v5[v20] ^= 268435439;
const v33 = 1796837847 & 2.2250738585072014e-308;
--v19;
const v35 = ~v33;
~2.2250738585072014e-308;
-1796837847;
!v19;
Math.clz32(v35);
