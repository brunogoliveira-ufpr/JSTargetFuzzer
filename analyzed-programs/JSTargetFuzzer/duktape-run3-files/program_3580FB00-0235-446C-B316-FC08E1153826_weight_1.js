const t0 = 3117;
t0[5] = -65537;
const v4 = Symbol.species;
const t3 = 3117;
t3[v4] = 3117;
try { v4.flatMap(-65537, 3117); } catch (e) {}
function f18() {
}
const v19 = [3117];
const v20 = [v19,v19,f18];
const v21 = [v20,f18,v20,v20,f18];
const v22 = [8548,9007199254740990,20545,1686263639,3,20350,24132,-9223372036854775808,619106436,-2147483647];
const v23 = [-56662,-331342346,9007199254740991,4294967296];
const v24 = [1538399720,38775,-12697,-268435456,4,6,256];
function f25(a26, a27) {
    const o46 = {
        [v22]: v21,
        "c": v24,
        valueOf(a29, a30, a31, a32) {
            const o35 = {
                "maxByteLength": 1804,
            };
            const v38 = new Float32Array(Float32Array, a26, Float32Array);
            new Uint32Array(v38, Uint32Array, Uint32Array);
            ["XW7a"];
            const v43 = new SharedArrayBuffer(230, o35);
            new Int32Array(v43);
            return Int32Array;
        },
    };
    return o46;
}
const v47 = f25(v19, v22);
const v48 = f25(v47, v21);
const t34 = f25(10781, v23);
t34[v48] = v47;
const o53 = {
};
Symbol();
v23[13];
[1000000.0,3.5646042001132052,0.36955532688554216];
[1.7976931348623157e+308,-1.0,-1.3782380233082563e+308,5.0,373710.1314863025,372.92075386447823,0.7128178183457655,-Infinity,6.248735345033044];
[-2.06722632569716e+307,-913.3177246789137,-Infinity,2.197339944495026e+307,-439.8022367321994,Infinity,578.208665281099,779625.9582080359,-702.2706867408659];
new Proxy(f18, o53);
[-1257034784,10000,4,-18445,-1412999301,-65536];
[256,6,-39401];
[65537,-9997,-536870912];
let v67 = +v22;
const v68 = 0.0 / v67;
Math.log10(v67);
v68 % 0.0;
v67++;
