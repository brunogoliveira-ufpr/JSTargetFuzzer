[-4.687867749519561];
[-955777.0448059903,0.45578699708341,NaN,1000000000000.0,0.23426981855892914,-6.062102295494537e+307];
[-4.0,955.3464645756401,0.12199702119632161,968355.4826921183,0.0,-1.0766008296424374e+308,1.7976931348623157e+308];
new Int16Array(8);
new Uint16Array(1024);
new Int16Array(5);
function f15() {
    return "e";
}
f15();
const o22 = {
    3: 536870889,
    3: 767904787,
};
const v23 = [-20945,-1024,11,5,4294967297,65536];
[-9223372036854775807,-6233,-2098392681];
[2,-7,12,-221294060,4294967296,9007199254740991];
new Uint8ClampedArray(Uint8ClampedArray);
function F33(a35, a36, a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
}
new F33(F33, -392267.747459059, -392267.747459059, -1.7976931348623157e+308);
const v41 = [767904787];
Reflect.apply(v23.indexOf, v23, v41);
const o47 = {
};
let v51 = "arguments" instanceof Int32Array;
++v51;
const v54 = new Uint16Array();
try { v54.keys(); } catch (e) {}
const v56 = new Proxy(Reflect, o47);
v56.indexOf;
const t31 = [-4.5822464498636055e+306,-1.7928526232326418e+308,-913763.8399161518,-0.172316072351963,-2.220446049250313e-16,0.27554475624345875,3.7958087771229128,4.825043338925195e+307,0.6290644046963862,5.0];
delete t31[8];
function F60() {
    if (!new.target) { throw 'must be called with new'; }
}
const v62 = new F60();
v62.a;
