const v0 = [6512,5,15,9352];
const v1 = [1648666765,512,23033,65535,8,127];
const v2 = [-2147483649,258093732,9007199254740992,-4306,-2,129];
const v3 = [-752993.2156120361];
const v4 = [1.7976931348623157e+308,1e-15,-1.0,0.3215077693282581,-299.3181556065118,2.2250738585072014e-308,4.0,5.0,0.0,3.971533772849057e+307];
const v5 = [0.8982742861540446,-4.0,-1.0,1.7976931348623157e+308,-5.0,-5.0,5.708523659995702,1000.0,-723404.1738416294,970.035907829601];
function f6(a7, a8) {
    const o9 = {
        "e": a7,
        "a": a8,
        "h": v3,
        __proto__: a8,
        1073741824: v5,
        ...a8,
        "g": v2,
        "f": v1,
        "d": a8,
        "c": v1,
        "b": v2,
        113: a7,
        [v0]: a7,
        1024: a8,
        3: v5,
    };
    return o9;
}
const v10 = f6(v2, v5);
f6(v3, v3);
f6(v2, v0);
new Set();
function F15(a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = v10;
    this.h = a18;
    this.b = v4;
}
new F15(v0, v0, v5);
const v21 = new F15(v5, v3, v1);
const v22 = new F15(v0, v0, v5);
const v23 = v22.b;
v3[v23] += v23;
new Set(v22);
let v26 = -9007199254740991;
Math.log(Set);
v26 ^ v26;
~Set;
v26--;
v5[0] = v21;
