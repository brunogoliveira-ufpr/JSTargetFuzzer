const v0 = [-9.14413467683271e+307,-1.0,1000000.0,842445.245758292,-0.0,Infinity,9.9327246671806];
const v1 = [-1.0,1.7786203703876649e+308,899802.8976677747,3.0,2.3997117976085374,-930704.2012677607,NaN,-2.220446049250313e-16];
const v2 = [-2.2250738585072014e-308,-3.0,1000000000000.0,1000.0,1000000000.0,-259764.4604549529,0.48047954000608395,-1000.0,-1.4031761989541845e+307];
const v3 = [v1,v1,v2,v1];
const v4 = [v0];
let v5 = [v3];
function f6(a7, a8, a9, a10) {
    const o19 = {
        "c": v2,
        valueOf(a12, a13) {
            const v14 = v1[a12];
            v5 *= a13;
            let v15;
            try { v15 = new a13(a7, a7, a13, v1, v1); } catch (e) {}
            [a7,v14,a13,[a12,v15,v15,v15],a9];
            [v0,v14,v15,v0,v3];
            return a10;
        },
        ...a9,
        "g": v3,
        "a": a10,
    };
    return o19;
}
const v20 = f6(v3, v0, v5, v4);
const v21 = f6(v2, v0, v4, v0);
f6(v20, v1, v1, v2);
v21[610] = v3;
function f26(a27, a28, a29, a30) {
    a29 /= a29;
    [a29,v21,v5];
    [v4,a28,[a28]];
    return a28;
}
f26(v0, v20, v20, v20);
[268435440,1073741823,-2147483649,268435441];
[-256,-4294967295,-1538677812,42235,-51609,61989,-1410637362,-65536,4096];
[-10,-199345423,-65536,-9223372036854775807];
