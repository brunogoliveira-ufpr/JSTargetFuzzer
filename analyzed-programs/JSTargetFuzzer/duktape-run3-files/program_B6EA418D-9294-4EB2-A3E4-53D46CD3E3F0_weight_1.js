const v5 = Math.sign(1024);
const v6 = [];
delete v6[2554683385];
function F8(a10) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = -303136502;
    let v11 = 0;
    do {
        v6[v11];
        Math[a10] = 10;
        this[13];
        v11++;
    } while (v11 < 0)
    this.h = 10;
}
-125001286 - [-5.0,1000000000000.0,5.0,NaN,1e-15];
let v20 = 0.0;
v20 %= Math;
new F8(-2147483648);
const v22 = new F8(-2147483648);
const v23 = new F8(v22);
new Uint16Array(127);
let v30 = 2307;
let v31 = 0;
do {
    1853644880 ** 4294967296;
    let v35 = 4294967296 << 2;
    let v36 = v30++;
    ~v36;
    --v35;
    v36--;
    v31++;
} while (10 < 10)
new Uint8Array(15);
new Uint32Array(257);
let v59 = new Float64Array(127);
v59 >>>= v5;
[-415.601818141403,-4.0];
Date ** v23;
function F65(a67, a68, a69) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = 831213088;
    2147483648 << 2147483648;
    const o72 = {
    };
    let v73 = 0.0;
    v73 %= v73;
    this.c = -762451292;
    this.d = 10000;
}
const v74 = new F65(1, 1, -1.3486461244335136e+307);
new F65(1, -62221, -1.3486461244335136e+307);
let v76 = 0.0;
const v77 = [-2.6598129038616847,NaN,657837.7029791046,-407491.680495893,-6.074383011109614,0.8647385166674492,-1000.0,-0.0,-892.6180041960963,0.024912672896254318];
([Infinity,0.4673165894854271,2.220446049250313e-16,0.7368631697570791,1.0,-104530.56159810629,0.35840283039348597,0.2938804676252652,3.0,373.52895740906774])[v77];
v76 %= v76;
new F65(-62088, 4294967297, -1.3486461244335136e+307, F8);
v74[1024] = -877.9371151192076;
