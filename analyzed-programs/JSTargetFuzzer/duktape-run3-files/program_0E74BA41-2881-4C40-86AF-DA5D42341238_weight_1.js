[-2147483647,-7,-8508,-128,21710,32325,256,-1024,-63313];
const v1 = [3,-536870912,268435456,10,-11,1582092153,255];
const v2 = [-63759,787495853,2147483647];
const v4 = [9223372036854775807,-930172199,4,-65537,1073741823,-11,8,-4096,7];
const v5 = [-20621413,512,7,1254211717,-16538,-10,-31560,695210985];
const v6 = [536870887,8,536870889,536870912,1683552327,1073741824,1];
function f7(a8, a9, a10, a11) {
    const o20 = {
        [v1]: v5,
        "d": v1,
        o(a13, a14) {
            try { v1.findIndex(a14, a13); } catch (e) {}
            this.__proto__;
            return a11;
        },
        "b": a11,
    };
    return o20;
}
const v21 = f7(v1, v6, v5, v4);
const v22 = f7(v1, v5, v21, v6);
const v23 = f7(v2, v4, v22, v4);
let v27 = 0;
while (v27 < 4) {
    function F30(a32, a33, a34, a35) {
        if (!new.target) { throw 'must be called with new'; }
        this.d = v1;
        this.b = v4;
    }
    new F30(v4, 4.0, v22, -269186.90410258225);
    new F30(v1, 4.0, v21, 4.0);
    new F30(v2, 0.0, v23, 4.0);
    v27++;
}
