const v2 = new Float64Array(13);
new Number(14);
new Uint8ClampedArray(733);
[9,-11,-9223372036854775808,-1122684624,268435441,-128,-9007199254740992];
const v13 = [536870887,-60795,-50686,512,-256,3,12,5,-4294967295];
const v14 = [4,-1214595218,1919800217,1073741824,0,-1073741824,-50103,-5,127];
const v24 = [2.2250738585072014e-308,-2.2250738585072014e-308,-1e-15,3.7959181805650056e+307,503.3474853731134,1000000.0,0.5952140999109389,Infinity];
const v25 = [1000000000000.0,1000000000.0,NaN];
const v26 = [2.2250738585072014e-308,-771.7611238159932,-1.7976931348623157e+308,-338138.3881191445,0.26390886866937446];
function F27(a29, a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a30;
    this.b = v26;
    v13.c = a29;
}
const v32 = new F27(v14, 7, "object");
new F27(-1572899236, -4096, "qJ", v2, 534544680, 13);
const v34 = new F27(-1572899236, -4096, "qJ");
v34[v26] = v34;
v25.toString = v26;
try { v24.at(534544680); } catch (e) {}
const t21 = 128;
delete t21[3];
try { ("qJ").slice(7, 128); } catch (e) {}
function f38(a39, a40, a41, a42) {
    return -1;
}
f38("object", "qJ", -27478, v32);
