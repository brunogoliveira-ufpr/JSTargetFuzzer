class C3 {
    #b = "n";
    static {
        try { this.defineProperty(); } catch (e) {}
    }
    static g;
    get f() {
        let v6 = this;
        const v10 = !-1539697401;
        ~v10;
        ++v6;
        -1539697401 >> -8.205581608043047;
        ~-8.205581608043047;
        return Math.sinh(v10);
    }
}
new C3();
new C3();
const v18 = new C3();
function f19() {
    return v18;
}
[2.2250738585072014e-308,8.10745484620601e+307,680143.6158852272,2.0,1000000000.0];
const v21 = [1e-15,4.0,1000000000.0,-626.9587679733304,0.741884771411795,-1000000.0];
[5.193511562125657,-1000000000000.0,631.0624138631722,9.472606097293792,0.5333810258855257,-1000000000.0];
const v23 = -Infinity;
f19();
switch (-7) {
    default:
        v18 + C3;
        break;
    case v21:
        var f = v23;
        "n" >>> -832.511173658857;
        break;
}
