let v2 = -Infinity;
v2 %= v2;
const t2 = -1000.0;
t2[Symbol.toPrimitive] = -4.0;
try {
const t0 = -1000.0;
new t0(-1000.0, -4.0, v2, v2, -1000.0);
} catch (e) {}
const v9 = new Float32Array(4096);
new Int16Array(5);
new Int16Array(248);
const v18 = [0.18001287851745562,839608.9487238773,-9.80531911543295e+307];
function f21() {
    let v24 = -631145.3062300202;
    v24 + v24;
    const v26 = v24--;
    const v27 = Math.log2(v9);
    Math.trunc(v9 % (4294967296 & v26));
    const o43 = {
        toString(a35, a36) {
            [1000,-1761415288,255,129,50667,-4,536870912,-20802,1167858922,-9223372036854775808];
            [2147483647,-2147483648,-9223372036854775808,-15,8,536870888];
            [64280,256,-11,52608,-1,-9007199254740992,268435441,1427852442,16];
            return -1024;
        },
        "g": 955,
        "f": 4096,
        "e": v27,
        "h": Float32Array,
        __proto__: "n",
        "b": v24,
        "a": 1.7976931348623157e+308,
        1496: -1024,
        "f": "n",
        "e": v18,
        [1]: "function",
        "h": v18,
        /*
        __proto__: "n",
        */
    };
    return o43;
}
v18 > f21();
function f60(a61, a62) {
    const o63 = {
        "e": a61,
        __proto__: 65535,
        "a": a61,
        [a62]: a61,
    };
    const o64 = {
    };
    1024 >> false;
    return o63;
}
f60(-1, -1);
f60(-793786875, 11);
f60(-3, 512);
