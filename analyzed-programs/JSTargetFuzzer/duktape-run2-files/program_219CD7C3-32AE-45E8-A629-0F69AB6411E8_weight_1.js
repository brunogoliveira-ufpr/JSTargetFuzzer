new Date();
const v2 = [-1000000.0,520474.8304345007,-1.7976931348623157e+308,6.728434722497624];
const v3 = [-2.0,-823.3011762539642,-4.0,5.0,1000000.0,0.4114220094708141,0.6237315023412319,-164424.68545326625];
const v4 = [1.6554258230498128e+308,-27176.90834973089,988.0883295658277,7.583843519423169,3.0,920295.3346059117,1.0,-824.2730999493717,4.0,-0.0];
[712062796,2068565067,268435441,-18460,16,-2147483647,268435441,15,-2,65536];
const v10 = [-28866,9007199254740990,2,2147483648,-2147483649,0,-16,-6,-2018030239];
const v11 = [7,-9007199254740991,4294967297,7,-268435456,-58852];
let v13 = 4;
function F15(a17, a18, a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    function F21(a23) {
        if (!new.target) { throw 'must be called with new'; }
    }
    F21 > ("IMJBi").lastIndexOf();
}
const v27 = [16,443853635,3,47817,-65536,65536,-4294967295,1052658825,-1477830014];
const v28 = [-6,268435440,-10,710417484,9223372036854775807,-2147483648,-4294967297,-50249,33626,-9007199254740990];
const v29 = [388128452,-2147483647];
const v32 = new Uint16Array(2);
for (let v33 = 0; v33 < 94; v33++) {
    v2.valueOf = Date;
    [128,-11,-1073741824,1073741824,-2,-430292991,-360961942];
    [-4294967295,-200283380,-622878704,-2048948846];
    [1024,9,255,2147483647,-15];
}
new Int32Array();
Uint8Array - Int16Array;
const v44 = new Int32Array(5);
new Uint8Array(4);
const v49 = Symbol.isConcatSpreadable;
function F50(a52, a53, a54, a55) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = v32;
    this.f = a54;
    this.e = a55;
}
new F50(4, v3, v44, 10000);
new F50(16, v10, Uint8Array, 2);
new F50(5, v28, v3, 2);
v29[v49] = v27;
try {
const t0 = 5;
t0(5, 5);
} catch (e) {}
switch (16) {
    case -1.7976931348623157e+308:
        break;
}
const v63 = Symbol.unscopables;
v27[v63] = v63;
v4.toString = Symbol;
v49[1678530292] = 16;
v13 = 16;
function f64() {
    return v11;
}
typeof v27 === "undefined";
v28[v32];
