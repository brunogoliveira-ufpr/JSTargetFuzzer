new Uint8ClampedArray(1964);
new Float32Array(2351);
new Int16Array(1024);
new Uint16Array(176);
new Float32Array(512);
new Uint8Array(2670);
const v31 = new Error();
const v34 = new Uint8Array(64, Uint8Array);
new Int8Array(13, v34, 151522616, -2147483649);
new Int32Array(1022);
const v57 = [1073741824,-28759,-9223372036854775807,785839084,5,3,-9223372036854775808,-65536,536870887,9];
const v58 = [1584871030,-1024,1680506705,-8,536870888,9,512];
const v59 = [41687,266896762,-32532,16,255,1];
v57[5] -= 9007199254740991;
const v63 = [255,-2,-9223372036854775807];
[-3,-65536,-4294967297,-569629120,-2147483649,-4294967296];
[2,2147483649,536870912,46513,255];
const o66 = {
    [268435440]: -8,
    "c": 268435440,
    __proto__: v59,
    3: v58,
    16: v63,
};
new Float64Array(4);
for (const v69 in "string") {
    const v72 = ("bigint")["p"];
    function f73() {
        const o74 = {
        };
        return o74;
    }
    const t32 = f73();
    t32["p" % v72] = v72;
}
[];
new Float32Array(1000);
const v83 = new Int32Array(16);
const v86 = new Int16Array(3144);
const v90 = 3144 >> v86;
let v91;
try { v91 = Int16Array(v90, 1000, 3144); } catch (e) {}
v83.byteOffset;
switch (0.01413596778607562) {
    case -1.6775380604269171e+308:
        break;
    case v83:
        try { Int32Array(); } catch (e) {}
        break;
    case -1.7976931348623157e+308:
        try { v91(); } catch (e) {}
        break;
    default:
        v86.byteOffset;
        break;
}
new Int32Array(16);
new RegExp(1000);
function F101() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = true;
    this.e = true;
    this.h = true;
}
new Error();
new F101();
new F101();
const v106 = [-6705,-3,1863065743,-8,-1264365765,4294967296,-2,1808493317];
[2,536870912,-4,-1,8,7,5,1073741823,-7,42904];
[2450,65537,565674827,-2037759632,-4294967297,256,-128];
[0.005124827983396307,1.0,-5.0,-453549.7842268592,0.7136440482346572,-Infinity];
[-2.7959290226481155,-656.0896408979011,9.23960606528911,0.8286510881988536];
const v111 = [3.0,1000000.0,0.02045556907611057];
if (v111 < v31) {
    [-5.0,32.717065458179604,-0.3574585826550454,-3.0];
    [-1000000.0,-1.7976931348623157e+308,1.7976931348623157e+308];
    [969.8052578128186,-4.0,-1.0,-362.37509327342536,-1e-15,-5.279069857736262,1e-15,0.614675978271746];
} else {
    v111[Symbol.search] = v106;
}
