[];
const t0 = "atan";
t0.b = [539.1719313921005,0.8960933830837293,7.818647580566943e+307,0.01577694217414327];
let v10 = 0;
do {
    try {
    const t0 = 7;
    t0("atan", 7);
    } catch (e) {}
    v10++;
    const v15 = Symbol.unscopables;
    const t11 = 5;
    t11[v15] = v15;
} while (v10 < 2)
function f20(a21, a22, a23) {
    const o31 = {
        n(a25, a26) {
            -44871 && 65536;
            this.__proto__ = this;
            this < 65536;
            return a26;
        },
        __proto__: a21,
        "d": -44871,
        1835056351: -10574,
        255: 5.0,
        valueOf() {
            return this ^ a21;
        },
        "g": a22,
        [a23]: 5.0,
        [65536]: a23,
        "b": -1.0508092330130747,
        "a": a23,
    };
    return o31;
}
f20(1000000000000.0, -1.0508092330130747, -44871);
f20(-44871, 1000000000000.0, -44871);
function F38(a40, a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    const t41 = 1927917269;
    t41.c = a40;
    const t43 = 1927917269;
    t43.d = -9007199254740991;
}
const v44 = new F38(2, 47722, 2, 1927917269);
new F38(-9007199254740991, 47722, 0, 2);
new F38(2, 0, -9007199254740991, 2);
new Int8Array(16);
([8.28455321080142,2.6710323089565726,609303.1900260369,-5.0])[7];
function f57() {
    return v44;
}
new Float32Array(157);
const v61 = new Uint8Array(9);
[-1000000000.0,-907088.7888462907,416.99693245704793,2.220446049250313e-16,-1e-15,-594.55290540817,752009.5505237647,9.23654653148407,973.1488182196465,-4.0];
[0.6450021271475713,-Infinity,2.457785734319282,5.0,0.07579924064363774,-365.12750876154246,0.4885923626731591,3.0,3.0762261215735];
([8.28455321080142,2.6710323089565726,609303.1900260369,-5.0])[7] >>> v61;
const t56 = "g";
t56.length &&= 157;
