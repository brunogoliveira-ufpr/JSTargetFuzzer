const v0 = [1.0,NaN,-1000000000.0,4.3545426587617815,5.0,7.938401829919425,-5.807403093327125e+307,2.220446049250313e-16,-2.2250738585072014e-308];
const v1 = [-249569.7273085839,-5.570221147896138e+307,431.09643246464225,0.7069375888939545,363344.73399699363,0.8153073327472864,704.6793959575689,-1000000000000.0];
const v2 = [0.0,2.2250738585072014e-308,8.012068166825376,1000000.0];
function f6(a7, a8, a9) {
    const o10 = {
        9: v0,
        __proto__: v2,
        "d": 268435440,
        "b": 268435440,
        "f": a7,
        "g": a9,
        [a7]: a8,
        3129400608: a7,
        [-183454263]: -183454263,
        64: 65535,
        1000: a7,
    };
    return o10;
}
f6(268435440, v1, -183454263);
f6(-183454263, f6, -183454263);
const v13 = f6(65535, v0, 65535);
function f14() {
    return v13;
}
[9];
const v16 = [7,64591,3008,64,4];
const v17 = [3,1000,536870889,-128,-2003151513,9007199254740991,-256,2147483649];
function F18(a20) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a20;
    0 < 5;
    new RegExp(1000);
}
new F18(v16);
new F18(v17);
new F18(v16);
new Int8Array(0);
new Int32Array(1016);
const v40 = [512,-6,6] >= 1258627548;
try {
const t0 = 7;
t0(v40);
} catch (e) {}
new Int32Array(317);
const v45 = ([-1000000000.0,-907088.7888462907,416.99693245704793,2.220446049250313e-16,-1e-15,-594.55290540817,752009.5505237647,9.23654653148407,973.1488182196465,-4.0])[7];
v45 >>> v45;
function F47() {
    if (!new.target) { throw 'must be called with new'; }
}
const v51 = new Uint8ClampedArray(198);
new Float64Array(208);
const v57 = new Int16Array(3171, 198, v51, Float64Array);
new Float64Array(4);
new Float32Array(Float32Array);
new Uint8Array(16);
[-1000000000.0,-907088.7888462907,416.99693245704793,2.220446049250313e-16,-1e-15,-594.55290540817,752009.5505237647,9.23654653148407,973.1488182196465,-4.0];
const v74 = [0.6450021271475713,-Infinity,2.457785734319282,5.0,0.07579924064363774,-365.12750876154246,0.4885923626731591,3.0,3.0762261215735];
[8.28455321080142,2.6710323089565726,609303.1900260369,-5.0];
let v82 = 268435441;
const v84 = -1.0 && v57;
const v85 = v84 * -9223372036854775807;
v84 - Int32Array;
Math.hypot(v74);
-v85;
v82--;
v74[7] >>> 3171;
const t64 = "g";
t64.length &&= v51;
