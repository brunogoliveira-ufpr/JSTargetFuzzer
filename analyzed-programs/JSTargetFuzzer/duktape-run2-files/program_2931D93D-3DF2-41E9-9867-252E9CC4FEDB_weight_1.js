const v3 = [6.987298852869432e+307,5.0,-0.0,0.0];
[-144.75885470416938,374551.34259190643,-848.5410208886088,1000.0,282342.3302951993,5.9568211307154435,-1000000.0,516.7593962082706];
const v5 = [1000000000000.0,1000.0,1000000000.0,1.0,1000000000000.0,0.635431043926498,1.7976931348623157e+308,3.0,-3.0];
function f7(a8, a9, a10) {
    const o17 = {
        o(a12, a13, a14) {
            a14.length = 8;
            const t7 = 8;
            t7.b = a9;
            a13[this];
            return a8;
        },
        "g": false,
        4: a8,
        "f": v5,
    };
    return o17;
}
f7("-945729472", "-945729472", f7);
f7("-945729472", "includes", "-945729472");
f7("V", "-945729472", "includes");
const v21 = [1000,65536];
const v22 = [14,1320161232,-33857,-9223372036854775808,129,-65537,-65537,1000,3,-2094702391];
const v23 = [-327545803,3,-1073741824,256,-2147483649,10,7,-4294967297];
const v24 = [0.609119574146879,Infinity];
[0.4496854087440256];
const v26 = [-473.62408674188214,Infinity,5.0];
function f27() {
    return v3;
}
function F31(a33, a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = a35;
    this.e = a35;
    this.b = -268435456;
}
new F31(v23, v21, v22, 536870912);
new F31(v23, v21, v26, "-945729472");
const v39 = new F31(v24, v22, v26, -268435456);
for (const v40 in v22) {
    f27();
}
v23[-7] **= 536870912;
v39.valueOf = f27;
v26 >> 536870912;
