new Int32Array(8);
new Int8Array(3);
new Uint32Array(1000);
const v15 = [6.987298852869432e+307,5.0,-0.0,0.0];
const v16 = [-144.75885470416938,374551.34259190643,-848.5410208886088,1000.0,282342.3302951993,5.9568211307154435,-1000000.0,516.7593962082706];
const v17 = [1000000000000.0,1000.0,1000000000.0,1.0,1000000000000.0,0.635431043926498,1.7976931348623157e+308,3.0,-3.0];
function f19(a20, a21, a22) {
    const o29 = {
        o(a24, a25, a26) {
            a26.length = 8;
            const t10 = 8;
            t10.b = a21;
            a25[this];
            return a20;
        },
        "g": false,
        4: a20,
        "f": v17,
    };
    return o29;
}
let v30 = f19("-945729472", "-945729472", f19);
let v31;
try { v31 = ("-945729472").lastIndexOf(v30, v30); } catch (e) {}
v31 >>= false;
const v33 = [f19];
Reflect.apply(v16.reduceRight, v15, v33);
const v36 = f19("-945729472", "includes", "-945729472");
false !== v16;
v30 |= v36;
try { v36.o(v17); } catch (e) {}
f19("V", "-945729472", "includes");
const v43 = [1000,65536];
const v44 = [14,1320161232,-33857,-9223372036854775808,129,-65537,-65537,1000,3,-2094702391];
const v45 = [-327545803,3,-1073741824,256,-2147483649,10,7,-4294967297];
let v46 = undefined;
v46 %= v46;
const v47 = [0.609119574146879,Infinity];
[0.4496854087440256];
const v49 = [-473.62408674188214,Infinity,5.0];
function f50() {
    return v15;
}
function F54(a56, a57, a58, a59) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = a58;
    this.e = a58;
    this.b = -268435456;
}
new F54(v45, v43, v44, 536870912);
new F54(v45, v43, v49, "-945729472");
const v62 = new F54(v47, v44, v49, -268435456);
for (const v63 in v44) {
    f50();
}
v45[-7] **= 536870912;
v62.valueOf = f50;
v49 >> 536870912;
