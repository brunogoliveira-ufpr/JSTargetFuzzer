const v3 = [-430638373,-65535,11,-4294967295,257,-1031279791,9007199254740991,-32232,-4096];
const v4 = [1000,8,0,-536870912,65535,-8,-1024,9007199254740991,532153105];
const v5 = [36834,-4294967296,9,-8,65536,1220507676];
function f6(a7, a8, a9, a10) {
    const o18 = {
        [a7]: a9,
        "d": 536870889,
        n(a12, a13) {
            a7.length;
            return 536870888;
        },
        268435456: v4,
    };
    return o18;
}
f6(v3, 268435439, f6(v3, 536870889, v5, v3), v3);
const v21 = f6(v5, 268435439, v4, v4);
const v22 = [4096,23025,8];
const v23 = [1024,568928427,40388,-13,-802586403,-2147483647];
const v24 = [3,9007199254740992];
const v28 = [-664005.2207788791,2.2250738585072014e-308];
const v29 = [-1.6378239589979392e+308,263048.8570294073,0.9310201760123866,0.2863653587088678,-2.0,-1000000.0,-2.2250738585072014e-308,-0.0,2.220446049250313e-16];
const v30 = [-409.4241382982036,-4.0,4.0];
function f31(a32, a33, a34, a35) {
    const o44 = {
        64: v23,
        "b": v30,
        "a": v28,
        toString(a37, a38, a39, a40) {
            return v30;
        },
        2373: v29,
        __proto__: a32,
    };
    try { a33(a34, v30, v29, v28, v21); } catch (e) {}
    a35 * v3;
    return o44;
}
f31(v30, 256, 536870887, v28);
f31(f31(v24, 2, 256, f31), 256, 536870887, 536870887);
const v53 = [1000,65536];
const v54 = [14,1320161232,-33857,-9223372036854775808,129,-65537,-65537,1000,3,-2094702391];
const v55 = [-327545803,3,-1073741824,256,-2147483649,10,7,-4294967297];
const o62 = {
    m(a57, a58, a59, a60) {
        a57.length;
        return this;
    },
};
const v63 = [0.609119574146879,Infinity];
[0.4496854087440256];
const v65 = [-473.62408674188214,Infinity,5.0];
function f66() {
    return v54;
}
function F70(a72, a73, a74, a75) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = a72;
    a74.e = a74;
    this.b = -268435456;
}
let v76 = new F70(v55, v53, v54, 536870912);
new F70(v55, v53, v5, 536870912);
const v78 = new F70(v63, v54, v65, -268435456);
for (const v79 in v54) {
    f66();
}
v55[-7] **= v30;
[f31];
v76 ||= v76;
const v85 = [];
const v88 = EvalError(44);
function F89(a91) {
    if (!new.target) { throw 'must be called with new'; }
    for (let v92 = 0; v92 < 5; v92++) {
        v88.stack;
    }
    v85[4] **= a91;
}
v78.valueOf = f66;
v22 >> 536870912;
