new Date();
new Float32Array([957563.2211017457,-1000000000000.0,1.1823968911456344e+308,-5.427586882848024e+307,0.6877827435051608]);
const t2 = [64];
t2.length = 268435456;
const t4 = [512,-6,6];
t4[1073741824] += -1969398940;
const v21 = [1000,65536];
const v22 = [14,1320161232,-33857,-9223372036854775808,129,-65537,-65537,1000,3,-2094702391];
const v23 = [-327545803,3,-1073741824,256,-2147483649,10,7,-4294967297];
const v24 = [0.609119574146879,Infinity];
[0.4496854087440256];
new Int16Array();
const t12 = [1073741824,-9007199254740990,-9007199254740990,-128,268435441,-1665296830,1073741823,-775952237];
t12.length >>>= -1397934452;
const v30 = [-473.62408674188214,Infinity,5.0];
function f31() {
    return v22;
}
function F35(a37, a38, a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = a39;
    this.e = a39;
    function f41() {
    }
    const v42 = [-4294967297,-6,7385,16,-11,33218,-1,38186,-2147483648];
    try { v42.map(f41); } catch (e) {}
    f41();
    this.b = -268435456;
}
new F35(v23, v21, v22, 536870912);
new F35(v23, v21, v30, 536870912);
const v47 = new F35(v24, v22, v30, -268435456);
for (const v48 in v22) {
    f31();
    const v52 = new Uint8Array();
    for (const v53 in v52) {
        continue;
    }
}
v23[-7] **= 536870912;
v47.valueOf = f31;
v30 >> 536870912;
const v60 = [27300235,4,-2076598131,10,63962,540861401];
"p" + -1397934452;
"13" ^ v60;
"symbol" ^ ("n" / "n");
new Uint8Array(v60);
