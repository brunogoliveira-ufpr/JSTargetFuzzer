let v1 = -1073741824;
v1 = 30891;
v1[5] -= 268435441;
"boolean" ^ ("n" / "n");
try {
const t0 = 641107767;
t0(30891);
} catch (e) {}
-36218;
new Int16Array(1000);
const v25 = new Uint8Array(738);
const t11 = [1073741824,-9007199254740990,-9007199254740990,-128,268435441,-1665296830,1073741823,-775952237];
t11.length >>>= -1397934452;
function F28() {
    if (!new.target) { throw 'must be called with new'; }
}
new F28();
const v33 = new Uint32Array(10);
const v36 = [-6705,-3,1863065743,-8,-1264365765,4294967296,-2,1808493317];
const v37 = [3.0,1000000.0,0.02045556907611057];
if (1073741824) {
    [-5.0,32.717065458179604,-0.3574585826550454,-3.0];
    [508.60683651640466,-2.220446049250313e-16,-3.9263795954822207,-378.5911553034704,-500018.2478921515,1000.0,3.0,3.0];
    [969.8052578128186,-4.0,-1.0,-362.37509327342536,-1e-15,-5.279069857736262,1e-15,0.614675978271746];
} else {
    +v33[1073741824];
    for (let v44 = 0; v44 < 32; v44++) {
        v25["p" + v44] = v44;
    }
    v37[Symbol.search] = v36;
}
new Float32Array(1000);
const v51 = new Int32Array(16);
const v55 = [16,443853635,3,47817,-65536,65536,-4294967295,1052658825,-1477830014];
const v57 = Symbol.unscopables;
v55[v57] = v57;
const v59 = new Uint16Array(Uint16Array);
536870912 ** v59;
Math.hypot(4294967296);
let v65 = -17944;
v65 -= -23226;
const v66 = new Int16Array(3144);
const v70 = 3144 >> v66;
let v71;
try { v71 = Int16Array(v70, 1000, 3144); } catch (e) {}
v51.byteOffset;
switch (0.01413596778607562) {
    case -1.7976931348623157e+308:
        try { v71(); } catch (e) {}
        break;
    case v71:
        try { v71(); } catch (e) {}
        break;
    case v71:
    default:
        new Float32Array([957563.2211017457,-1000000000000.0,1.1823968911456344e+308,-5.427586882848024e+307,0.6877827435051608]);
        [[-2.220446049250313e-16,0.704114748202786,-2.2250738585072014e-308,-0.780490972288808,0.0,-1.0,568.2571568161432,2.220446049250313e-16]];
        v66.byteOffset;
        break;
}
Math.max(3144);
const o85 = {
    ["b"]: "b",
    [v1]: "b",
};
