[-1000.0,0.6620256917012171];
const v4 = [1000000.0,1000000000.0,-1000.0,2.2250738585072014e-308,0.6105528002583455,0.48182612840823014];
const v5 = [8.306725143228896,-9.403817347546234,1.0,-561.1970340956718,1000000000000.0,-Infinity,88054.9929490157];
Array(10);
const v9 = [268435456,9,-282656730];
function f10() {
    const o11 = {
    };
    Object.defineProperty(v9, o11, { enumerable: true, get: f10 });
    return v9;
}
function F12(a14, a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = a14;
    let v17 = 0;
    v17++;
    function F20() {
        if (!new.target) { throw 'must be called with new'; }
        new Int16Array();
        this.e = true;
    }
    this.h = v5;
    this.g = a15;
}
new F12(v5, 1073741824, F12);
const v25 = new F12(v5, -13762, -4294967295);
new F12(v4, -4294967295, v25);
Symbol.isConcatSpreadable;
~(-560.9365175143504 - -560.9365175143504);
let v35 = 0;
[4,257,-12,-2147483648,-9007199254740990,-9223372036854775808];
let v42 = [19472,65536,-9223372036854775808,4294967296,4294967295,3,1692527085,-4294967295,-1073741824,2147483649];
const v43 = [512,-6,6];
if (v43 >= 1258627548) {
    v42 = v43;
    Float64Array % 257;
    const v48 = ([-1000000000.0,-907088.7888462907,416.99693245704793,2.220446049250313e-16,-1e-15,-594.55290540817,752009.5505237647,9.23654653148407,973.1488182196465,-4.0])[7];
    v48 >>> v48;
} else {
    const t39 = 65535;
    t39[6] = v42;
}
v35 >>= 257;
-8;
v43[3930995995] >>= -1969398940;
const o51 = {
};
new Proxy(v42, o51);
