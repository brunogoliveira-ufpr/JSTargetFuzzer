const v0 = [];
const v4 = [18832,257,-268435456];
[2147483648,-47391,4294967297,64671];
const v6 = [153108504,-52756,-14,2,55115];
function F11() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = true;
    function F13(a15, a16, a17) {
        if (!new.target) { throw 'must be called with new'; }
    }
    function F18(a20, a21) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v22 = new F18();
    F13 % v22;
    this.e = true;
    this.a = true;
    let v24 = -2114889855;
    --v24;
    1258627548 ** ("gDUdY")[536870888];
}
new F11();
function f32(a33, a34, a35, a36) {
    "1190994887" * "1190994887";
    const t23 = "string";
    t23[6] = v4;
    return "1Q";
}
f32("1Q", v6, v0, -729585367);
const v39 = new F11();
new F11();
const v41 = [-6705,-3,1863065743,-8,-1264365765,4294967296,-2,1808493317];
[2,536870912,-4,-1,8,7,5,1073741823,-7,42904];
[2450,65537,565674827,-2037759632,-4294967297,256,-128];
const v44 = [0.005124827983396307,1.0,-5.0,-453549.7842268592,0.7136440482346572,-Infinity];
[0.9909528859975811,-1000000.0,-847395.931988225,5.819010735179074];
const v46 = [3.0,1000000.0,0.02045556907611057];
if (v46 < v39) {
    const v48 = [-5.0,32.717065458179604,-0.3574585826550454,-3.0];
    function f49() {
        return v48;
    }
    try { v44.every(f32, v48); } catch (e) {}
    v4["reduce"](f32);
    [508.60683651640466,-2.220446049250313e-16,-3.9263795954822207,-378.5911553034704,-500018.2478921515,1000.0,3.0,3.0];
    function f54(a55, a56) {
        256 << Date;
        return Date;
    }
    [969.8052578128186,-4.0,-1.0,-362.37509327342536,-1e-15,-5.279069857736262,1e-15,0.614675978271746];
} else {
    function F62(a64, a65) {
        if (!new.target) { throw 'must be called with new'; }
    }
    Float32Array << 9;
    v46[Symbol.search] = v41;
}
