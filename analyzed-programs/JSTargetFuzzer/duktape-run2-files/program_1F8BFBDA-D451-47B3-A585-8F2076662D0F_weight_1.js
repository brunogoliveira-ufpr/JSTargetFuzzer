new Int32Array(7);
new Uint32Array(0);
new Uint16Array(0);
const v9 = [2.0,1.0423787427072906,0.9132346942264868,-1.0];
const v10 = [2.0];
[3.0,418.66657099382996,-1000.0,1000000.0,7.069447302800814,1.1885567484094662e+308,-736.6430440640954,-814.3484790856199];
new Int32Array(2776);
new Uint8ClampedArray(12, 12, 2776, 2776);
new Int8Array(2711);
[65422,-8,46615,536870889,-2,-9007199254740992,65535,4096];
const t9 = "number";
delete t9[175];
v9 >= v10;
function F25() {
    if (!new.target) { throw 'must be called with new'; }
}
[9223372036854775807,1143434388,6268,-520153531,602390028,595785867,-65537];
[1833627717,512,9007199254740991,-7,1679];
let v32 = 0;
const o36 = {
    get d() {
        return this;
    },
    "d": 268435441,
};
[4,257,-12,-2147483648,-9007199254740990,-9223372036854775808];
let v42 = [19472,65536,-9223372036854775808,4294967296,4294967295,3,1692527085,-4294967295,-1073741824,2147483649];
const v43 = [512,-6,6];
if (v43 >= 1258627548) {
    v42 = v43;
    Math.clz32(25143);
    const t29 = [414.5952539526579,-2.0,939103.9847645715,-Infinity,-1000000000000.0,0.4457673514069189,NaN,5.0,-1.7976931348623157e+308];
    t29[6] = [19472,65536,-9223372036854775808,4294967296,4294967295,3,1692527085,-4294967295,-1073741824,2147483649];
} else {
    const t34 = 65535;
    t34[6] = v42;
}
v32 >>= 257;
!8;
v43[3930995995] >>= -1969398940;
([-4.0,NaN])[7];
for (const v54 in "string") {
}
const o55 = {
};
new Proxy(v42, o55);
function F58(a60, a61, a62, a63) {
    if (!new.target) { throw 'must be called with new'; }
}
new F58();
const o71 = {
    m(a66, a67, a68, a69) {
        a66.length;
        return this;
    },
};
