const v0 = [];
const v1 = [v0,v0,v0];
const v2 = [v1,v1,v1,v1];
const v3 = [v0,v2,v2];
[v0,v3,v0,v2];
const v5 = [v1];
[v2,v2,v3,v5];
new Date();
[4096,23025,8];
const v13 = [1024,568928427,40388,-13,-802586403,-2147483647];
const o14 = {
};
new Uint32Array(o14);
function F17(a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
}
const v21 = [3,9007199254740992];
const v25 = [-664005.2207788791,2.2250738585072014e-308];
const v26 = [-1.6378239589979392e+308,263048.8570294073,0.9310201760123866,0.2863653587088678,-2.0,-1000000.0,-2.2250738585072014e-308,-0.0,2.220446049250313e-16];
const v27 = [-409.4241382982036,-4.0,4.0];
const t20 = Symbol.isConcatSpreadable;
t20[1678530292] = 16;
function f31(a32, a33, a34, a35) {
    const o44 = {
        64: v13,
        "b": v5,
        "a": v21,
        toString(a37, a38, a39, a40) {
            return v27;
        },
        2373: v26,
        __proto__: a32,
    };
    return o44;
}
f31(v27, 256, 536870887, v25);
f31(f31(v21, 2, 256, f31), 256, 536870887, 536870887);
const o49 = {
};
new Proxy(Int16Array, o49);
const v52 = [1000,65536];
const v53 = [14,1320161232,-33857,-9223372036854775808,129,-65537,-65537,1000,3,-2094702391];
const v54 = [-327545803,3,-1073741824,256,-2147483649,10,7,-4294967297];
const o61 = {
    m(a56, a57, a58, a59) {
        a56.length;
        return this;
    },
};
const v62 = [0.609119574146879,Infinity];
const v63 = [0.4496854087440256];
const v64 = [-473.62408674188214,Infinity,5.0];
function f65() {
    return v53;
}
~-268435456;
o49[6] = v63;
function F73(a75, a76, a77, a78) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = a77;
    a77.e = a77;
    0 < 5;
    const v83 = ([-1000000000.0,-907088.7888462907,416.99693245704793,2.220446049250313e-16,-1e-15,-594.55290540817,752009.5505237647,9.23654653148407,973.1488182196465,-4.0])[7];
    v83 >>> v83;
    this.b = -268435456;
}
new F73(v54, v52, v53, 536870912);
new F73(v54, v52, v64, 536870912);
const v87 = new F73(v62, v53, v64, -268435456);
for (const v88 in v53) {
    f65();
    "boolean" ^ ("n" / "n");
    try { Int16Array(); } catch (e) {}
}
v54[-7] **= v27;
v87.valueOf = f65;
v64 >> 536870912;
