function f0() {
}
[-14678,824832965,-9223372036854775808,-2147483648,-65537];
const v2 = [-55242,10,-30028,127,2072937744];
const v3 = [6];
v3[-9223372036854775807] = v3;
function F5(a7) {
    if (!new.target) { throw 'must be called with new'; }
}
const o10 = {
    [-1667280160]: "m",
};
const v15 = v2[Symbol.match];
const v18 = new Array(3630);
let v19 = -1.0;
new Date();
[2.220446049250313e-16,0.8503554073302996];
[0.914665770611798,1.7976931348623157e+308,2.0730004162611504,815.8859738564668,0.5042384642029341,-39545.17188742047,1000000000.0,1000000000.0];
[-3.0,0.8515014925314399,-1.223791783788534e+308];
v18[1] &&= 3630;
let v29 = 4073;
v29 %= v29;
let v30 = -2147483647;
v30++;
const v33 = Math.round();
const v35 = new Uint32Array(3630);
v35[3] &&= v33;
v19 -= 322.382209525681;
Array.__proto__ = v18;
322.382209525681 << v15;
const t29 = "p";
t29[8] = f0;
const v42 = [0.6174342204332062,1.7976931348623157e+308,-0.0,-1.092245914276891e+308];
const o45 = {
    "maxByteLength": 8,
};
const v47 = new ArrayBuffer(8, o45);
new Uint8Array(v47);
const v50 = [5.0,-503.2436740557566];
const v51 = [-1000000.0,1000000000000.0,NaN,867.672258375783];
let v55 = 0;
while (v55 < 4) {
    const t42 = -9223372036854775807;
    t42[4] = v50;
    function F58(a60, a61, a62) {
        if (!new.target) { throw 'must be called with new'; }
        a60.g = v51;
        this.f = -9223372036854775807;
        this.h = 8;
    }
    new F58(-9223372036854775807, -9007199254740991, v51);
    new F58(-9223372036854775807, -9223372036854775807, v42);
    new F58(1725859146, 4294967297, v42);
    v55++;
}
