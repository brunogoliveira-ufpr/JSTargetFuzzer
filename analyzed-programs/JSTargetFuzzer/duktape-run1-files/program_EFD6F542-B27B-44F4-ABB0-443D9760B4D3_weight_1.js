const v0 = [];
const v4 = [-1889960863,-3,268435440,-128,7,-426654332,4,61392,1,536870888];
[9];
[658955664,1655470216,-1,-1073741824,5,3745,85710257,2147483649,-11723];
const v10 = [0.5543507723865562,364.7214237135472,5.0,-1.7976931348623157e+308,-0.0];
const v11 = [-5.0,-1000000000000.0,-7.467161484322022,-3.9931938833327756,0.9160023752220056];
const v12 = [-1.0,2.0,1.0,1000.0,0.11549172773170746,887.1856544747855,-5.0,5.0,2.2250738585072014e-308];
const v19 = [-35227066,-8,-686160835,-2,-9223372036854775807,-2147483647,1073741825,33912];
const v20 = [1004359996,-1024329128,129,268435439,-65537];
const v21 = [-2147483649,-1,-1];
const v24 = new Array(128);
function f25(a26, a27, a28, a29) {
    arguments.callee;
    return arguments;
}
try {
    const t16 = -2;
    t16[2] = v21;
    function F32(a34, a35, a36) {
        if (!new.target) { throw 'must be called with new'; }
        this.b = v19;
        this.f = a36;
        this.h = v0;
    }
    new F32(v11, v0, "2");
    new F32(v4, v0, "2");
    new F32(v12, v11, "substring");
} finally {
    v10 ^ 2273;
}
f25(v12, v20);
Object.defineProperty(Array, 2150, { value: v24.length });
