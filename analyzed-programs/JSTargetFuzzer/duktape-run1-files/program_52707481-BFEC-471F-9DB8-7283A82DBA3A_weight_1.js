new Int8Array(0, 0, 0);
let v3 = 4;
const t2 = v3++;
delete t2[7];
~0;
try { v3.reduceRight(v3, v3); } catch (e) {}
new Int16Array(162);
new Int16Array(100);
const v20 = [-2.6449340380817625e+307,-0.0,1.7976931348623157e+308,-101907.40093933546];
const v21 = [1.0,0.4606397470868786,-5.0,-1.0,-593606.0971247352,0.14106584065804928,-1.0,-1000000.0,-4.0,-1.7976931348623157e+308];
const v22 = [1.4632867118861435e+308,-5.743731395603864,-285.9237396271817,0.4716531803550563,0.40223692218602014,-Infinity];
1482086013 % -2128504467;
Array();
let v30 = ~Uint8Array;
++v30;
new Array(1024);
[-347526448,16753,4294967297];
const v34 = [10000,-9007199254740992,10,1024,2147483648,9223372036854775807,-1461515778];
[37736];
if (v22) {
    v21.length ||= 1024;
    v34.length = v20.length;
} else {
}
Object.defineProperty(v34, 6, { configurable: true, get: Array, set: Array });
