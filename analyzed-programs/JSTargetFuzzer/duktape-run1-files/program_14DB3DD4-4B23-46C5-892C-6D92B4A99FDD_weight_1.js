function f6() {
    ("-25474").length;
    ~45835;
    let v11 = 0;
    v11++;
    [-1630086655,-56790,-256] % 5;
    Math.cos(f6);
    -(-330804.12618808146);
    const v18 = f6++;
    Math.sqrt(-330804.12618808146);
    v18 + --f6;
    return "-25474";
}
function f22() {
    return "f";
}
const v23 = [-39192,"f"];
new f6();
const v25 = [8.619513133404375,1000000000000.0,0.9387634146355246,-8.300349255608907,686.6275861512231,2.547031565251947];
const v27 = new Float64Array();
v27 in v25;
[-48733,"d",-39192,5,v23];
const v30 = ["-25474","f",-39192,f6];
function f31() {
    return v30;
}
Math.hypot(-39192, 252, -2);
const v41 = new Int16Array(2213);
const o42 = {
};
new Proxy(v41, o42);
[-2,268435456,268435439,-2101419070,127,-11,-9223372036854775807,-1078484516,64,8];
[6,46454,-55939,17659,-1073741824];
[-4294967297,-9007199254740992,2,-1630300955,-1694718560,10000,-2147483648,127,7];
let v48 = Uint16Array;
v48--;
0 < 0;
function F55() {
    if (!new.target) { throw 'must be called with new'; }
    try {
    const t0 = 1406;
    t0();
    } catch (e) {}
    let v60 = ~9;
    v60++;
    const v62 = [1000000000000.0,2.2250738585072014e-308,2.465154934419795e+307,1.5505931937370416e+308,254.45872200385247,0.0];
    const v63 = [-1.0,1000000000000.0,86162.92672011885,-1000.0];
    function f64(a65, a66) {
        const o67 = {
            [a65]: v63,
        };
        return a65;
    }
    f64(v62);
}
new F55();
new Int8Array(1812);
new Uint8Array(3129);
new Int16Array(8);
let v77 = 0;
while (v77 < 1) {
    v77++;
}
