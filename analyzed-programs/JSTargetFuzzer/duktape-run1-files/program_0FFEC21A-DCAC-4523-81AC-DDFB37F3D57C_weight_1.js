[0.07062367916160917,5.0,-8.291158416836149,1000.0,1000.0,-1e-15,2.366577295186726];
[-Infinity,-1.0,0.33182006539976927,-1.0,1000000000.0,Infinity,0.3966829967462364];
[-6.759382308588508,-609.651167778162,1e-15];
[3.0,964.7548667217761,-4.367818972180865,1.0,0.08785954879709779,0.0,3.606785705343441,-1000000.0];
[-4.290058813376225,166.35790117236797];
[-2.2250738585072014e-308,-4.0,-642150.1256633999,-4.403507973085925,-950035.8335992787,906.5660677763822];
~541964588;
Object.defineProperty([-2147483649,-1,-1], 2150, { value: 0 });
const v21 = new Int16Array(2213);
const v24 = new Uint16Array(1000);
const v25 = +v24;
const o26 = {
    [v25]: v25,
};
const t14 = 536870888;
t14[2133] >>= 170836399;
function F31(a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = a34;
}
new Float64Array(1000);
new Float32Array(109);
for (let i = 0; i < 5; i++) {
    for (let v43 = 0; v43 < 5; v43++) {
    }
}
let v44 = 0;
v44++;
const t27 = [1.2159299768668375e+308,-6.138702377387015,2.0,1000000000.0,-1000000000000.0];
delete t27[1680];
([-54193,64,-65536,16]).lastIndexOf(3.0, 4096);
let v54 = 0;
do {
    const o55 = {
    };
    1975383941 ** +1975383941;
    try { Int8Array(); } catch (e) {}
    function f62() {
        return f62;
    }
    const v63 = [-9.448964787333276e+307,-1e-15,-1000000000000.0,1000000000000.0];
    v63.concat(-1024, f62, v63, this, Array(252));
    new Proxy(v21, o55);
    v54++;
} while (v54 < 5)
