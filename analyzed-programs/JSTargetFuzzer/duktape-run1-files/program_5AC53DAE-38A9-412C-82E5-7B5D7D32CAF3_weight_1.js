const o9 = {
    toString(a4, a5) {
        let v7 = Array(a5);
        return v7 *= [1.3521624627267695e+307,-1e-15,Infinity,4.0];
    },
};
[[2147483649,-2147483647,-2147483647,2147483649,[255,2147483649,2147483649,2147483647,-2147483647]]];
[-1.3689348619339427e+308,369534.5148218658,0.0866602442126625,0.0,2.0,-1000000.0,-1000000.0];
[2.2250738585072014e-308,1.0,0.6716243050537832];
[-1000000.0,-5.0,21794.955701965606,5.340418083022547,2.2250738585072014e-308,3.0,5.0,-667.9682707038246,5.0];
const v22 = [];
new Int8Array(v22, v22, v22);
new Uint8ClampedArray(1);
const v31 = new Uint32Array(4096);
[v31,Uint8ClampedArray,Uint32Array,v31];
const v33 = [4096,Uint32Array,1,1];
[v33,v31,v33,4096];
function F38(a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = 0;
}
const v42 = new F38(0, 15);
const v43 = new F38(-1368938825, 15);
new F38(0, -1368938825);
536870888 < F38;
if (F38) {
    v43.__proto__ = v42;
    try {
    const t0 = 0;
    t0();
    } catch (e) {}
    for (let v50 = 0; v50 < 32; v50++) {
        v42["p" + v50] = v50;
    }
} else {
    v42[170836399] = 536870888;
    v43[2133] >>= 170836399;
}
