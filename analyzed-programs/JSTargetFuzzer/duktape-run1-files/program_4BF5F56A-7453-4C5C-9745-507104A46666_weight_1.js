const v4 = [43567,[-844954238],43567];
[v4,v4];
const v12 = [];
const v13 = [1000000000.0,1000000000.0,0.9388337623349788,-4.0,-Infinity,-9.293649218929135,Infinity,151543.75293456437];
[3.0,0.8023470185372807,-8.454179429660591];
[-1000000000000.0,0.006441707830545318,-5.886330714207495];
let v25;
try {
const t0 = 1406;
v25 = t0();
} catch (e) {}
"matchAll" === v25;
function F27(a29, a30, a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
}
new Uint16Array(3014);
const v38 = [-2147483647,4294967295,2147483648,255,5,-268435456,-5,-65535,30881,1073741824];
const v39 = [-1,5,0];
const v40 = [268435439,-9223372036854775808,-41245,536870889,35223];
function F41(a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = a44;
}
new F41(v40, v39);
new F41(v39, v40);
new F41(v40, v38);
let v51 = 0;
while (v51 < 0) {
    v38 ** -1413170494;
    [15,-195573067,9007199254740992,4294967295,4294967295,27804,-5,4566,-63342,-17886];
    [-65536,536870888,-4294967295,9,9007199254740992,-39672,7,65535,5];
    [1768458921,-1865700706,-1459930215,4461];
    v51++;
}
new Int16Array(12);
let v62 = 164;
new Uint8ClampedArray(v62);
function F65(a67, a68, a69, a70) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a70;
    this.d = a70;
}
new F65("valueOf", "valueOf", "-36925", v13);
new F65("-36925", "valueOf", v12, v13);
new F65("valueOf", "-36925", "-36925", v12);
Math.trunc(0.4009627560905705);
v62++;
Math.log2(26016);
"7NWoM" >> 0.4009627560905705;
~"7NWoM";
Math.log2(26016);
Math.atan2(-4294967296, -4294967296);
