const v3 = [-1000000000000.0,-2.4639602573556534,-834741.3127829907,0.6106216037567272,0.24928883240960398,-1000000000.0,Infinity];
const v4 = [-1e-15,2.0,-8.17196367694666,1.0,689261.5316381969,139.31128771052];
const v5 = [1000000.0,-858886.1536589207,-5.0,753388.0303215294,-8.284652420459974,0.39523061609098065,3.7483789683607434,Infinity,8.420795208833674];
let v6 = -2.0;
function F9(a11, a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a14;
}
v5[0];
const v16 = v5[F9];
574553415 !== v6;
function f18() {
    const o20 = {
        ["e"]: "e",
        "e": f18,
    };
    return o20;
}
const v24 = new F9(v5, 4.0, 4.0, v3);
const v25 = new F9(v3, v24, v6, 6972);
let v26 = 10;
for (; v26--;) {
    v4[4] |= 6972;
    try { new v16(); } catch (e) {}
    v5[3];
}
new F9(v3, v25, v6, 562.3677279318697);
function F31() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = -24917;
    v6 **= 562.3677279318697;
    let v34 = JSON;
    v34 &= v34;
    v34 != F31;
}
new F31();
new F31();
const v39 = new F31();
const v40 = [-712.3035807579308,5.0,-157.90671206293825,0.8278905065485606,-2.0,-1000.0,1.7976931348623157e+308,0.0,791.8515174490444];
const v41 = [1000000000000.0,4.0,NaN,-1.7976931348623157e+308,-2.2250738585072014e-308,-Infinity,-224769.6539912771];
[1e-15,1000.0,3.97484349502663e+307];
const v43 = [-2.2161733517138324e+307,-1000000.0,0.8581791922430837,-847.4903820276804,1000000000.0,39524.86842285062];
[2.2250738585072014e-308,-248891.05467534892,0.0,1000000000000.0,-3.0,5.808374957589166,-3.0,1000.0];
[0.0,277.92003259564626,NaN];
v43.d = v39;
function F51() {
    if (!new.target) { throw 'must be called with new'; }
    this.b = undefined;
}
Boolean();
v43 - v39;
v40[7] &&= -21038;
v41[4294967296];
const v59 = v43;
let v62 = -21038 << v43;
v62 ^ v43;
const v64 = -(-42892);
const o65 = {
};
const o66 = {
};
let v67 = 0;
while (v67 < 1) {
    v67++;
}
v62--;
v62 >> v64;
Math.log(v62);
