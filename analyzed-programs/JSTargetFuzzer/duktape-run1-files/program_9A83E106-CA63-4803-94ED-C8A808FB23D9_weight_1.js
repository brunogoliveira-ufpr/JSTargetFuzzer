const v2 = new BigInt64Array(4006);
const v5 = new Int8Array(6);
new BigUint64Array(3910);
const v9 = [0.36159423482426767,NaN,-1e-15,-2.0,0.25532479589151635,-1.084963735237114,2.2250738585072014e-308,5.0,-1.2394684270463406e+308];
const v10 = [-1000.0,5.0,-5.315259783511603,-1000000000000.0,-506303.4235348165];
const v11 = [-7.237740393838637,-961.6305951023703,1000000000.0,2.220446049250313e-16,821349.9548414592,-159733.7559547125,-7.05302100283174e+307,-328956.24480720295];
if (v9 >= v2) {
    [] = v5;
} else {
    v10[128] = v2;
}
let v13;
try { v13 = BigUint64Array(3910, 4006, 3910); } catch (e) {}
try { v13(BigInt64Array); } catch (e) {}
v5 / 255;
Math.clz32(v11);
const v21 = v13--;
255 || 0.0;
v11 >> v5;
Math.acosh(0.0);
~v21;
