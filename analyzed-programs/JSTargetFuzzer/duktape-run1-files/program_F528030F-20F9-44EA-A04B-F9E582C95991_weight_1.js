[-632.3573242165917,1.808381182258854,0.08107899581897837,0.9668894991758304,-1e-15,1.6311476634497517e+308,-4.157226857686053,Infinity,-5.584597175470778];
[-2.2250738585072014e-308,-5.0,0.18849390845826086,-158.43099116011763,3.4431655241978874,1000000.0];
[6.454470371022915e+307,-105236.95564825868,-2.0,-1.7976931348623157e+308,6.472091715293858e+307,1.0,-4.0];
[-65537,-7,1073741823,4906,4294967297,-2147483648,150396713,-1024,127];
[2147483648,14970,-10078,-4096,-388255522,1073741824];
const v5 = [1,10000,36442,-4,268435440,10,7,-1024,-19942];
function F12(a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = v5;
    this.h = 1073741824;
}
const v16 = new F12(-1025, -2147483647);
const v17 = new F12(v16, -2147483647);
new F12(v17, 5);
const v24 = new Array(252);
function F25(a27, a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a30;
    let v31 = 252.2613830038522;
    ++v31;
}
new F25();
("748")[512];
const o41 = {
};
new Proxy(Array, o41);
try { ("imul").charCodeAt(252); } catch (e) {}
new Array(65536);
new Date();
v24[v24];
