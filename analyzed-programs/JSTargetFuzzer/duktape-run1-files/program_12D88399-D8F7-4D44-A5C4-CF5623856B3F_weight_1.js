const v3 = [16,3,-9223372036854775807,4294967296,-38193,13040,559977184,-14208];
[1073741824,-1,7,-4294967296,-4096,2147483648,-42258,-911462498];
let v5 = [808243091];
[9,1000];
const v7 = [-9223372036854775808,-9,7,219516165,16];
const v8 = [-9007199254740991,-17053,-7,2147483648,268435456,268435439,681389002,5,-581623216];
const v9 = [-1545279539,129,536870889,268435440,1000];
[9007199254740990,536870912];
[50176];
function f12(a13, a14, a15, a16) {
    const o34 = {
        set g(a18) {
            let v17 = this;
            const v19 = --v17;
            const o33 = {
                valueOf() {
                    ({"length":a15,...v5} = v7);
                    try { a16(a14, v19, a18, v5, v17); } catch (e) {}
                    const v23 = Symbol.iterator;
                    const o32 = {
                        [v23]() {
                            let v25 = 10;
                            const o31 = {
                                next() {
                                    v25--;
                                    const v29 = v25 == 0;
                                    const o30 = {
                                        "done": v29,
                                        "value": v25,
                                    };
                                    return o30;
                                },
                            };
                            return o31;
                        },
                    };
                    return v19;
                },
            };
        },
    };
    return o34;
}
const v35 = f12(10, 709661821, 709661821, v3);
const v36 = f12(709661821, -520718214, 709661821, v35);
const v37 = f12(10, 709661821, 709661821, v9);
try { v35.toString(10, v8, v35, v36, v37); } catch (e) {}
let v41 = -9;
const v42 = v41 ^ -2076657239;
Math.log2(v41);
v41++;
Math.atanh(v36);
Math.ceil(v42);
Math.acosh(-v41);
