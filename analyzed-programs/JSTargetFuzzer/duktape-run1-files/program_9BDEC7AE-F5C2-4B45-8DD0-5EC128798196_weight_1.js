const v0 = [-1,-953572518,-776,5,-12];
const v1 = [1073741824,-268435456,4294967296,65536];
const v2 = [255,1073741824,32717,-13,44950,0,-6338];
function f3() {
    return v2;
}
class C4 {
    [v1] = v2;
    #n(a6, a7) {
        let v8;
        try { v8 = new a6(a7, v2, this, a7); } catch (e) {}
        v8 + v0;
        return v8;
    }
    10000;
    [v0] = v1;
    static #g;
    [v2] = v2;
    2;
}
const v13 = new C4();
const v14 = new C4();
const v15 = new C4();
function F16(a18, a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = v0;
    this.d = C4;
    this.c = a19;
}
new F16(v1, v2, C4, v14);
new F16(v13, v13, v15, v2);
const v24 = new F16(C4, v0, v1, v2);
const v25 = [-48838,-27937,1447025850,536870887,-1990211437];
[1073741823,-2147483648,-2147483649,2,26150];
[-49078,65535,-730610367,51399,38016,1511451861,9007199254740992];
delete v24?.c;
v2.valueOf = f3;
[-1000000.0,-1.7976931348623157e+308,1.7976931348623157e+308,0.05642344552546019,-1e-15,6044.040482305922,NaN,-4.638842461318891,0.33488343458267855];
[2.0,-9.504054902775394,1e-15,Infinity];
[2.6964670275433438,-310105.2072089714,-1.2002620738194497e+308,1000000000.0,2.629487631215193,-1000.0,2.606477114319166e+307,-1.7976931348623157e+308,458940.6139817268];
for (let i34 = 0, i35 = 10; i34 < i35; i34++, i35--) {
    new C4();
    v25.length = i34;
}
