try { (-2147483648).find(-2147483648, -2147483648); } catch (e) {}
function F5(a7) {
    if (!new.target) { throw 'must be called with new'; }
}
new F5(F5);
(170836399 || 541964588) / -1368938825;
new Float64Array(127);
new Uint8Array(161);
new Int8Array(7);
function F28() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = -24917;
}
new F28();
new F28();
const v33 = new F28();
const v34 = [-712.3035807579308,5.0,-157.90671206293825,0.8278905065485606,-2.0,-1000.0,1.7976931348623157e+308,0.0,791.8515174490444];
typeof (-964032314).__proto__.length;
if (536870888 >= 1073741823) {
}
const v42 = [1000000000000.0,4.0,NaN,-1.7976931348623157e+308,-2.2250738585072014e-308,-Infinity,-224769.6539912771];
[1e-15,1000.0,3.97484349502663e+307];
const v44 = [-2.2161733517138324e+307,-1000000.0,0.8581791922430837,-847.4903820276804,1000000000.0,39524.86842285062];
[2.2250738585072014e-308,-248891.05467534892,0.0,1000000000000.0,-3.0,5.808374957589166,-3.0,1000.0];
[0.0,277.92003259564626,NaN];
function F48() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = -24917;
}
const v51 = new F48();
[-2.2161733517138324e+307,-1000000.0,0.8581791922430837,-847.4903820276804,1000000000.0,39524.86842285062] - v51;
v44.d = v33;
v44 - v33;
v34[7] &&= -21038;
v42[4294967296];
const v61 = v44;
let v64 = -21038 << v44;
v64 ^ v44;
const v66 = -(-42892);
v64--;
v64 >> v66;
Math.log(v64);
