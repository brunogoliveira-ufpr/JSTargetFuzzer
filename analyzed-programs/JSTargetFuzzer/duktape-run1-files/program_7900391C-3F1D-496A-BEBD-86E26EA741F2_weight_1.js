const v3 = [-197553.81521535618,-8.455801199027889,0.5616254850634189,-2.0];
const v4 = [-4.0,1.7976931348623157e+308,-7.55217832558783,-2.0];
const v5 = [-1.7976931348623157e+308,1.5431003752767238e+308,-150331.58657943818,0.43964897033678063,1000000.0,435.4529425146345];
function f6(a7, a8, a9) {
    const o14 = {
        p(a11, a12) {
            a11[this] ||= a8;
            let v13 = a7 + a11;
            [a8,v13,a8] = a11;
            a11.toString = v13;
            return a7;
        },
        "h": v5,
        "a": 129,
        [129]: v5,
        "b": a7,
    };
    return o14;
}
f6(v4, 129, v4);
const v17 = [-3504];
let v20;
try {
const t0 = 1406;
v20 = t0();
} catch (e) {}
"matchAll" === v20;
v17 && -3504;
f6(v3, 15, v5);
f6(v5, 15, v5);
const v28 = [];
const v29 = [1000000000.0,1000000000.0,0.9388337623349788,-4.0,-Infinity,-9.293649218929135,Infinity,151543.75293456437];
[3.0,0.8023470185372807,-8.454179429660591];
[-1000000000000.0,0.006441707830545318,-5.886330714207495];
new Uint16Array(3014);
new Int16Array(12);
let v44 = 164;
new Uint8ClampedArray(v44);
function F47(a49, a50, a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a52;
    this.d = a52;
}
new F47("valueOf", "valueOf", "-36925", v29);
new F47("-36925", "valueOf", v28, v29);
new F47("valueOf", "-36925", "-36925", v28);
Math.trunc(0.4009627560905705);
v44++;
Math.log2(26016);
"7NWoM" >> 0.4009627560905705;
~"7NWoM";
Math.log2("arguments");
Math.atan2(-4294967296, -4294967296);
