function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.c = 255;
}
new F0();
new F0();
new F0();
[NaN,3.0,8.414173704412433e+307,-4.771773346686116e+307,-Infinity,-1.0,-619.5467885940147,-241139.54513371398];
[-2.0,-753.5029625395473,726645.4663709521,-504.4658043361749,1000000.0,-816.1282263295852];
const v10 = new Int16Array(2213);
let v11 = 0;
do {
    const o12 = {
    };
    new Proxy(v10, o12);
    v11++;
} while (v11 < 5)
[-279.759791362016,1000000000.0,-1000000.0,2.2250738585072014e-308];
const v24 = new Array(3504);
function F30(a32, a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = -4294967296;
    this.a = v24;
}
const v37 = [0.6174342204332062,1.7976931348623157e+308,-0.0,-1.092245914276891e+308];
const v38 = [5.0,-503.2436740557566];
const v39 = [-1000000.0,1000000000000.0,NaN,867.672258375783];
let v43 = 0;
while (v43 < 4) {
    const t29 = -9223372036854775807;
    t29[4] = v38;
    function F46(a48, a49, a50) {
        if (!new.target) { throw 'must be called with new'; }
        this.g = v39;
        this.f = -9223372036854775807;
        this.h = 8;
    }
    new F46(-9223372036854775807, -9007199254740991, v39);
    new F46(-9223372036854775807, -9223372036854775807, v37);
    new F46(1725859146, 4294967297, v37);
    v43++;
}
