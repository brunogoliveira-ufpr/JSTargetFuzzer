new Float32Array(11);
new Int8Array(1);
new Uint8ClampedArray(127);
const v18 = [0.6174342204332062,1.7976931348623157e+308,-0.0,-1.092245914276891e+308];
const v19 = [5.0,-503.2436740557566];
const v20 = [-1000000.0,1000000000000.0,NaN,867.672258375783];
let v24 = 0;
while (v24 < 4) {
    const t8 = -9223372036854775807;
    t8[4] = v19;
    function F27(a29, a30, a31) {
        if (!new.target) { throw 'must be called with new'; }
        this.g = v20;
        this.f = -9223372036854775807;
        this.h = 8;
    }
    new F27(-9223372036854775807, -9007199254740991, v20);
    new F27(-9223372036854775807, -9223372036854775807, v18);
    new F27(1725859146, 4294967297, v18);
    v24++;
    let v36 = 4;
    const v38 = new Int32Array(v36);
    const v41 = new Uint32Array(512);
    const v44 = new Int32Array(2652);
    [-563.9566733042238,-2.0,NaN,5.0];
    const v47 = [0.7929494433755339,-3.0,2.0,94247.11362719396,-Infinity,2.220446049250313e-16,6.930750298454292,-1000.0,293.8116964844603,8.83198515200721];
    const v48 = [0.886205078108412,-212.9949381505047,-5.280510828302215e+307];
    const o49 = {
        [2652]: 2652,
        [v38]: Int32Array,
        "f": Uint32Array,
    };
    try { v47(o49, v48, v41, Int32Array); } catch (e) {}
    v36 = 512;
    v44[Int32Array];
    v47[10];
    v41[Uint32Array];
}
