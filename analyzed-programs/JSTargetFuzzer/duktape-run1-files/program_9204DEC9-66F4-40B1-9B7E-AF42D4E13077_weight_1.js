new Int8Array(7);
new Int16Array(4);
new Int8Array(127);
[7.571607044862507,-1e-15,0.29298035355895535];
[0.0019277361806335769,-643.1706188348751,-1.7976931348623157e+308,-2.220446049250313e-16,-1000000000.0];
[1000000.0,0.29841671109377665,427764.14244158217,0.9920376399075913,1000.0,-867.8766693294589,2.220446049250313e-16];
Math.round();
"p" + -9223372036854775807;
const v22 = new Int16Array(1228);
[-Infinity,-4.0,-1000000000000.0,-2.0,8.577006930431125,0.2618419879634689,7.150287625247256e+307,920.328050400745] >> 4.0;
function F29(a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = 0;
}
const v33 = new F29(0, 15);
v33[-1368938825] = 536870888;
const v37 = new Uint8Array(363);
const v40 = new Uint8Array(5);
function f43() {
}
Math.floor();
Math.ceil(Math);
if (170836399 >= 170836399) {
}
-4 ^ -4;
let v54 = [Math,Math,Math,Math];
v54 &= [-2,-2,-2,-2,-2];
let v56;
try { v56 = v22.find(v22); } catch (e) {}
try {
    v22.__proto__ = v22;
} catch(e58) {
    v40[e58] = e58;
} finally {
    v56 <<= v56;
    v37[256] |= 363;
}
