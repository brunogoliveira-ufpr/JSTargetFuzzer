[790766200,11,257,18719,0,-65537,-43473,-59475,-2141129036,536870888];
const v1 = [65536,512,50541,5601,-13759,29659,-2147483648,-10,0];
[-1073741824,-16];
const v3 = [-1000000.0,855.4439864060578,-9.189716370908451e+305];
const v4 = [-4.0,Infinity,4.0,1.0,5.867457961718828e+307,-80645.38547465357];
[-8.638397003977252,-1000000000.0,-2.220446049250313e-16,-Infinity,-803.292450666589,778242.1640878276,808.2032582713971,2.220446049250313e-16];
function f6() {
    return v3;
}
let v14 = Int16Array;
const v15 = new v14(2213);
const v18 = new Uint16Array(1000);
const v23 = v18[f6];
f6();
const v26 = new Float32Array(109);
v14 -= v14;
let v32;
try { v32 = v1.join(v23); } catch (e) {}
const t18 = 6;
t18[4] = v32;
function F33(a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = v26;
    this.d = v4;
    this.h = 1073741823;
}
const v37 = new F33(Float32Array, v18);
new F33(Uint16Array, v37);
new F33(v4, Float32Array);
let v41 = 0;
[3.0];
[-655873.5475127087,-7.8785538058110305,0.9755118178743795,1000000000.0,-1.0700704162724897e+308,-Infinity];
const v44 = [-3.6404863935566967,73.39216736294065,-562982.7681821352,321.65113434591603,Infinity,-1.0,1000000000.0,-3.953558477121966,269037.77991572814];
Object.defineProperty(v44, v1, { value: v44 });
do {
    const o46 = {
    };
    new Proxy(v15, o46);
    v41++;
} while (v41 < 5)
