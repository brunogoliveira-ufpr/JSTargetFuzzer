[898344.7361236946,5.469049398854835,1.0922093574572624e+308,1000000.0,647.811602766827,0.2767632348921222];
(-1459754276 - (-1459754276 & 8)) << 8;
[65595.84794148896,-1.7976931348623157e+308,4.0,-1.4117079748900881e+308,-2.220446049250313e-16,4.705867163987596,605.7195471655223];
[-1.7976931348623157e+308,Infinity,-1.0,-0.0,-0.0,5.0];
[1000000.0,0.4844849322249265,0.3577930194072496,-1.4676384210675115e+308,-1000000000.0];
[1000000000000.0,0.32996301301152,-994950.8531315612,32770.25226003595,2.0,-864.6063717935579,0.4898636467622167,0.0];
[-3.0,937.5427652384128,-304970.93073795177,683428.0278487117];
const v19 = new Int16Array(1228);
const v22 = new Uint8Array(363);
+1975383941;
function F25() {
    if (!new.target) { throw 'must be called with new'; }
}
try {
} finally {
    let v28;
    try {
    const t0 = 256;
    v28 = t0(256, 256, 256, F25, F25);
    } catch (e) {}
    v28 | F25;
}
const v32 = new Uint8Array(5);
let v36;
try { v36 = v19.find(v19); } catch (e) {}
try {
    v19.__proto__ = v19;
} catch(e38) {
    v32[e38] = e38;
} finally {
    v36 <<= v36;
    v22[256] |= 363;
}
