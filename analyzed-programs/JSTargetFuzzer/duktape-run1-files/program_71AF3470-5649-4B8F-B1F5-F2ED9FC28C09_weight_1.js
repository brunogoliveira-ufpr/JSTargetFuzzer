[857483627,1,1778,9223372036854775807,12];
const v8 = [5.0,-503.2436740557566];
const v9 = [-1000000.0,1000000000000.0,NaN,867.672258375783];
const t2 = -9223372036854775807;
t2[4] = v8;
const v12 = +Uint8ClampedArray;
const o13 = {
    [v12]: v12,
};
function F14(a16, a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    [v8,-4294967296,4096];
    function F23(a25, a26, a27) {
        if (!new.target) { throw 'must be called with new'; }
    }
    this.g = v9;
    this.f = -9223372036854775807;
    this.h = 8;
}
[8];
[4294967297,1106108035,1000,-65536,-7,-16,-256,-9007199254740992];
let v34 = ++F14;
!-9223372036854775807;
v34--;
let v39 = 4;
const v41 = new Int32Array(v39);
const v44 = new Uint32Array(512);
const v46 = [1.5076863331471609e+308,185799.0809327457,-400829.9625187506,-1e-15,-0.0,1000.0];
v46 >> 145;
8 < 0;
const v53 = new Int32Array(2652);
[-563.9566733042238,-2.0,NaN,5.0];
const v56 = [0.7929494433755339,-3.0,2.0,94247.11362719396,-Infinity,2.220446049250313e-16,6.930750298454292,-1000.0,293.8116964844603,8.83198515200721];
["59692"];
let v61 = undefined;
v61 = v46;
new Number(512);
const v66 = new Float64Array(9);
const v67 = v66[8];
1539067513 >= v67;
const v69 = [0.886205078108412,-212.9949381505047,-5.280510828302215e+307];
const v70 = -v67;
const v73 = ["boolean",-4294967296,v39];
v73.sort();
const o77 = {
    [2652]: 2652,
    [v67]: v12,
    [o13]: "59692",
    [v70]: "boolean",
    get b() {
        return -this;
    },
    [v41]: Int32Array,
    "f": Uint32Array,
};
const v78 = [-35406,-128,268435439];
const v79 = [-7648,-56818,16,4,1007569727,4];
const v80 = [-2];
let v81 = [v78];
const v82 = [v80,v73,v80];
for (let i = 0; i < 5; i++) {
    2.50552314384502e+306 in v82;
    v79[2974113795] ||= v81 &= v82;
}
try { v56(o77, v69, v44, Int32Array); } catch (e) {}
v39 = 512;
v53[v67];
v56[10];
v44[Uint32Array];
