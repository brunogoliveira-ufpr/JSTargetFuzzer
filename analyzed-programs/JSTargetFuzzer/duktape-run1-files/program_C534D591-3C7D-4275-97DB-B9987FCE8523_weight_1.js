[857483627,1,1778,9223372036854775807,12];
const v8 = [5.0,-503.2436740557566];
const v9 = [-1000000.0,1000000000000.0,NaN,867.672258375783];
const t3 = -9223372036854775807;
t3[4] = v8;
function F11(a13, a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = v9;
    this.f = -9223372036854775807;
    this.h = 8;
}
[8];
[4294967297,1106108035,1000,-65536,-7,-16,-256,-9007199254740992];
let v21 = 4;
const v23 = new Int32Array(v21);
const v26 = new Uint32Array(512);
const v29 = new Int32Array(2652);
[-563.9566733042238,-2.0,NaN,5.0];
const v32 = [0.7929494433755339,-3.0,2.0,94247.11362719396,-Infinity,2.220446049250313e-16,6.930750298454292,-1000.0,293.8116964844603,8.83198515200721];
new Number(512);
const v38 = new Float64Array(9);
const v39 = v38[8];
1539067513 >= v39;
const v41 = [0.886205078108412,-212.9949381505047,-5.280510828302215e+307];
-v39;
(["boolean",-4294967296,v21]).sort();
const o47 = {
    [2652]: 2652,
    [v23]: Int32Array,
    "f": Uint32Array,
};
const v48 = [-35406,-128,268435439];
const v49 = [-7648,-56818,16,4,1007569727,4];
const v50 = [-2];
let v51 = [v48];
const v52 = [v50,v51,v50];
for (let i = 0; i < 5; i++) {
    2.50552314384502e+306 in v52;
    v49[2974113795] ||= v51 &= v52;
}
try { v32(o47, v41, v26, Int32Array); } catch (e) {}
v21 = 512;
v29[Int32Array];
v32[10];
v26[Uint32Array];
