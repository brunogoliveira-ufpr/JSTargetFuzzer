[-1.1746348691473115e+308,-2.81912819498078,-8.523000122548869e+306];
[-6.747982993707058e+307,-1.025137173537778e+308,1000000000.0,-1000000000.0,-1.45977972572281e+308,1000000.0];
const v2 = [-1000000.0];
function f3() {
    return v2;
}
[-1221872242,3,2,-1073741824,268435439,3,352733042,127,5];
[536870889,1073741824,1979676417,1073741824,256];
[-48626,127,-2147483648];
const v15 = new Int16Array(2213);
new Uint16Array(1000);
new Float32Array(109);
const v24 = [-3504];
let v27;
try {
const t0 = 1406;
v27 = t0();
} catch (e) {}
"matchAll" === v27;
v24 && -3504;
let v35 = 0;
do {
    const o36 = {
    };
    new Proxy(v15, o36);
    v35++;
    function F41(a43, a44, a45) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v46 = new F41(2, 2, F41);
    2 ** v46;
} while (v35 < 5)
