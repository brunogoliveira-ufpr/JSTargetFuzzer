const v0 = [6.731581009268228e+307,0.42940007871712005,2.0,6.907306720283751e+307,2.220446049250313e-16,NaN,895582.11633108];
const v1 = [-Infinity,0.7684068038878918,0.39177955261055253,9.53487987188153e+307,-95.32708623215069,-2.2250738585072014e-308,1000000000000.0,0.513892290709864];
const v2 = [-815.4938547480203,-2.220446049250313e-16,3.4789205652536825,-664130.7062797797,1000000000000.0,-2.0,367.7395726781747,7.06123595564263,-1000000.0];
const v3 = [v0,v2,v2,v1,v2];
[v3,v0,v3,v3,v3];
[v3,v1];
[10000,3,-14,-1,-9223372036854775807,48303,1073741824,423608258,-2147483648];
const v13 = [1122001838,2147483647,-591,9007199254740991,-1905851743,255,-15];
[2147483649,0,536870912,65535];
const v15 = [];
const v16 = [1000000000.0,1000000000.0,0.9388337623349788,-4.0,-Infinity,-9.293649218929135,Infinity,151543.75293456437];
[3.0,0.8023470185372807,-8.454179429660591];
[-1000000000000.0,0.006441707830545318,-5.886330714207495];
new Uint16Array(3014);
new Int16Array(12);
new Uint8ClampedArray(164);
function F34(a36, a37, a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = 164;
    this.d = a39;
}
new F34("valueOf", "valueOf", "-36925", v16);
new F34("-36925", "valueOf", v15, v16);
new F34("valueOf", "-36925", "-36925", v15);
let v45 = -4294967296;
Math.trunc(v13);
v45++;
Math.log2(v2);
"7NWoM" >> 0.4009627560905705;
~"7NWoM";
Math.log2(26016);
Math.atan2(v45, v45);
