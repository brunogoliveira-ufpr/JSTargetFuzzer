[[-788101304,-6,-4096,0.0,-788101304],-4096];
[Infinity];
const v15 = [-2147483647,4294967295,2147483648,255,5,-268435456,-5,-65535,30881,1073741824];
const v16 = [-1,5,0];
const v17 = [268435439,-9223372036854775808,-41245,536870889,35223];
function F18(a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    Array(Array).length;
    ~Uint8Array;
    this.g = a21;
}
let v27 = 164;
v27++;
v16.e = null;
function f30(a31, a32, a33, a34) {
    arguments.callee;
    return arguments;
}
const v37 = new F18(v17, v16);
new F18(v16, v17);
new F18(v17, v15);
-4 ^ -4;
const v44 = [1000000000.0,1000000000.0,0.9388337623349788,-4.0,-Infinity,-9.293649218929135,Infinity,151543.75293456437];
function F47(a49, a50, a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a52;
    this.d = a52;
}
new F47("valueOf", "valueOf", "-36925", v44);
v37.__proto__;
0 < 2;
~Uint8Array;
let v61 = 0;
const v66 = ([-55242,10,-30028,127,2072937744])[Symbol.match];
let v67 = -1.0;
v67 -= 322.382209525681;
322.382209525681 << v66;
while (v61 < 0) {
    v15 ** -1413170494;
    [15,-195573067,9007199254740992,4294967295,4294967295,27804,-5,4566,-63342,-17886];
    [-65536,536870888,-4294967295,9,9007199254740992,-39672,7,65535,5];
    [1768458921,-1865700706,-1459930215,4461];
    v61++;
}
