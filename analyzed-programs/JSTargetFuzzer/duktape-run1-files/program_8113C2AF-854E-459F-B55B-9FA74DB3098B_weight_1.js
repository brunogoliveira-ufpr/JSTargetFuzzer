function f5(a6, a7, a8) {
    let v9 = undefined;
    v9 = f5;
    return f5;
}
[898344.7361236946,5.469049398854835,1.0922093574572624e+308,1000000.0,647.811602766827,0.2767632348921222];
(-1459754276 - (-1459754276 & 8)) << 8;
[65595.84794148896,-1.7976931348623157e+308,4.0,-1.4117079748900881e+308,-2.220446049250313e-16,4.705867163987596,605.7195471655223];
[-1.7976931348623157e+308,Infinity,-1.0,-0.0,-0.0,5.0];
[1000000.0,0.4844849322249265,0.3577930194072496,-1.4676384210675115e+308,-1000000000.0];
[1000000000000.0,0.32996301301152,-994950.8531315612,32770.25226003595,2.0,-864.6063717935579,0.4898636467622167,0.0];
[-3.0,937.5427652384128,-304970.93073795177,683428.0278487117];
const v24 = new Int16Array(1228);
const v27 = new Uint8Array(363);
+1975383941;
function F30() {
    if (!new.target) { throw 'must be called with new'; }
}
try {
} finally {
    let v33;
    try {
    const t0 = 256;
    v33 = t0(256, 256, 256, F30, F30);
    } catch (e) {}
    v33 | F30;
}
const v37 = new Uint8Array(5);
let v41;
try { v41 = v24.find(v24); } catch (e) {}
try {
    v24.__proto__ = v24;
} catch(e43) {
    v37[e43] = e43;
} finally {
    v41 <<= v41;
    v27[256] |= 363;
}
