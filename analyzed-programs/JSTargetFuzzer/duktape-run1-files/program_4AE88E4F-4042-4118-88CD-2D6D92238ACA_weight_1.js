const v3 = [1.0,217.12332847018502,-1000000.0,-1000000000.0,7.603358189981945e+307,2.0,0.8364144622158083,-841546.9210853674];
const v4 = [-5.0,-6.3408396092862285,0.8484550936929592,-1.3671880831015305e+308];
const v5 = [0.5481682143691955,NaN,1000.0,-1.6356465114972212e+308,-2.426904127346143,-2.0,9.160497440667548,444.3003355704268,-5.0,-840287.6790962011];
function F6(a8, a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a8;
    this.b = v4;
    this.e = a10;
}
new F6(-9007199254740991, 1834, v3);
new F6(1834, 1834, v5);
new F6(8, 8, v4);
const v20 = new Int16Array(Int16Array, Int16Array, Int16Array);
let v21;
try { v21 = v20.find(v20, v20); } catch (e) {}
try {
    v21.__proto__ = v20;
} catch(e22) {
} finally {
}
const v24 = [-2147483647,4294967295,2147483648,255,5,-268435456,-5,-65535,30881,1073741824];
const v25 = [-5];
const v26 = [268435439,-9223372036854775808,-41245,536870889,35223];
function F27(a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = a30;
}
new F27(v26, v25);
new F27(v25, v26);
new F27(v26, v24);
let v37 = 0;
while (v37 < 0) {
    v24 ** -1413170494;
    [2078176056];
    [-65536,536870888,-4294967295,9,9007199254740992,-39672,7,65535,5];
    [1768458921,-1865700706,-1459930215,4461];
    v37++;
}
