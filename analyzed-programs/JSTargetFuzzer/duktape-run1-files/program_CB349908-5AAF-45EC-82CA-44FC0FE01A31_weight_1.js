new Float64Array(1870);
const v5 = new Int32Array(173);
const v8 = new Uint8ClampedArray(5);
for (let v13 = 0; v13 < 40; v13++) {
    v5 in v8;
}
let v16 = -402259452;
const v18 = Int32Array / 5;
const v19 = 5 * 5;
Math.cbrt(v16);
~Int32Array;
Math.random();
-v18;
Math.cbrt(v19);
function F27() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = -24917;
}
const v30 = new F27();
const v31 = new F27();
v16 = -9007199254740991;
let v32 = v5[6];
v32 = v19;
const v34 = v31[173] >> v30;
const v35 = new F27();
const v36 = [-712.3035807579308,5.0,-157.90671206293825,0.8278905065485606,-2.0,-1000.0,1.7976931348623157e+308,0.0,791.8515174490444];
const v37 = [1000000000000.0,4.0,NaN,-1.7976931348623157e+308,-2.2250738585072014e-308,-Infinity,-224769.6539912771];
[1e-15,1000.0,3.97484349502663e+307];
const v39 = [-2.2161733517138324e+307,-1000000.0,0.8581791922430837,-847.4903820276804,1000000000.0,39524.86842285062];
[2.2250738585072014e-308,-248891.05467534892,0.0,1000000000000.0,-3.0,5.808374957589166,-3.0,1000.0];
v34 <= 173 ? v34 : 173;
[-9223372036854775808,4095,-20063,65536,-1,-14,-4,1073741823];
[-65537,536870889,-1268701040,20403];
[3,-268435456,1048817613,536870888,-268435456,1973771441,1258031488,536870887];
[0.0,277.92003259564626,NaN];
v39.d = v35;
v39 - v35;
v36[7] &&= -21038;
v37[4294967296];
const v55 = v39;
let v58 = -21038 << v39;
v58 ^ v39;
const v60 = -(-42892);
v58--;
v58 >> v60;
Math.log(v58);
