new Int16Array(1816);
new Uint32Array(10);
new Uint32Array(129);
[Uint32Array,129];
const v11 = [Uint32Array,[129,10,1816],1816];
const v15 = [-2.6449340380817625e+307,-0.0,1.7976931348623157e+308,-101907.40093933546];
const v16 = [1.0,0.4606397470868786,-5.0,-1.0,-593606.0971247352,0.14106584065804928,-1.0,-1000000.0,-4.0,-1.7976931348623157e+308];
const v17 = [1.4632867118861435e+308,-5.743731395603864,-285.9237396271817,0.4716531803550563,0.40223692218602014,-Infinity];
new Array(1024);
const v21 = [-347526448,16753,4294967297];
const v25 = ["number"];
const t11 = "887169979";
t11.length &&= -1811428404;
const t13 = "887169979";
t13.__proto__ = v25;
const v29 = "o" >> -13559;
const v30 = ("number")[6];
v25[v29] = 255;
const v31 = [10000,-9007199254740992,10,1024,2147483648,9223372036854775807,-1461515778];
[37736];
if (v17) {
    v16.length ||= 1024;
    v31.length = v15.length;
} else {
    try { v30.isSafeInteger(65535, 65535); } catch (e) {}
    const t25 = "number";
    const v37 = delete t25[6];
    v21[v37] = v37;
    v11[v37] = 65535;
    v11 > 1813587008;
}
Object.defineProperty(v31, 6, { configurable: true, get: Array, set: Array });
