const v3 = [266768.09970088187];
const v4 = [9.327053549563642e+307,83.33019193195969,672.4203684783768];
const v5 = [Infinity,NaN,-279859.5246944509,1e-15,1.7012519155734774e+308,-2.930146708751047,-9.508352621073794];
function F6(a8, a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a8;
}
const v11 = new F6("d", v3, v4);
const v12 = new F6("qa", "qa", v3);
let v13 = new F6("stack", v12, v5);
[-2,268435456,268435439,-2101419070,127,-11,-9223372036854775807,-1078484516,64,8];
const v15 = [6,46454,-55939,17659,-1073741824];
[-4294967297,-9007199254740992,2,-1630300955,-1694718560,10000,-2147483648,127,7];
for (const v17 in v3) {
    v13 >>= v12;
    let v18;
    try { v18 = v15.some("stack", v15); } catch (e) {}
    v18 > v4;
}
new Int8Array(1812);
new Uint8Array(3129);
new Int16Array(8);
let v29 = 0;
if (3129) {
    v11[2147483648] %= v29;
} else {
    v12.b >>>= 1812;
}
while (v29 < 1) {
    v29++;
}
