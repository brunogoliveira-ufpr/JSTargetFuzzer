new Uint32Array(369);
const v6 = new Int16Array(86);
new Uint8Array(128);
new Int8Array(64);
new Int16Array(10);
new Uint16Array(5);
const v22 = [-2147483647,4294967295,2147483648,255,5,-268435456,-5,-65535,30881,1073741824];
const v23 = [-1,5,0];
const v24 = [268435439,-9223372036854775808,-41245,536870889,35223];
function F25(a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = a28;
}
const v29 = new F25(v24, v23);
new F25(v23, v24);
new F25(v24, v22);
const v35 = new Float32Array(11);
new Int8Array(1);
new Uint8ClampedArray(127);
const o50 = {
    "b": 127,
};
let v51;
try { v51 = v35.some(-65536, o50); } catch (e) {}
try { v51(-1708515101, v51, 11, Float32Array); } catch (e) {}
const v54 = [0.6174342204332062,1.7976931348623157e+308,-0.0,-1.092245914276891e+308];
const v55 = [5.0,-503.2436740557566];
const v56 = [-1000000.0,1000000000000.0,NaN,867.672258375783];
v51 | o50;
new Uint16Array(196);
new Int8Array(8);
new Float32Array(401);
let v70 = 0;
while (v70 < 4) {
    const t34 = -9223372036854775807;
    t34[4] = v55;
    function F73(a75, a76, a77) {
        if (!new.target) { throw 'must be called with new'; }
        this.g = v56;
        this.f = -9223372036854775807;
        this.h = 8;
    }
    new F73(-9223372036854775807, -9007199254740991, v56);
    new F73(-9223372036854775807, -9223372036854775807, v54);
    new F73(1725859146, 4294967297, v54);
    v70++;
    new Int32Array(4);
    const v87 = new Uint32Array(512);
    new Int32Array(2652);
    [-563.9566733042238,-2.0,NaN,5.0];
    [0.7929494433755339,-3.0,2.0,94247.11362719396,-Infinity,2.220446049250313e-16,6.930750298454292,-1000.0,293.8116964844603,8.83198515200721];
    [0.886205078108412,-212.9949381505047,-5.280510828302215e+307];
    const o95 = {
    };
    v87[Uint32Array];
}
new Int16Array(v29);
v6.byteLength;
let v104 = 0;
while (v104 < 0) {
    v22 ** -1413170494;
    [15,-195573067,9007199254740992,4294967295,4294967295,27804,-5,4566,-63342,-17886];
    [-65536,536870888,-4294967295,9,9007199254740992,-39672,7,65535,5];
    [1768458921,-1865700706,-1459930215,4461];
    v104++;
}
