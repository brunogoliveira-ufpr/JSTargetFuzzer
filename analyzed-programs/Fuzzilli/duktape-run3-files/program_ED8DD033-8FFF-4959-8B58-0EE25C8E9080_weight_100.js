function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a5;
    this.e = a5;
    this.g = a5;
}
new F3(-393171817);
new F3(-393171817);
new F3(-393171817);
new Float64Array(Float64Array, Float64Array, Float64Array);
const v18 = ([]).__proto__;
function F19() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = 1024;
}
new F19();
[-1786200530,1868167390,-4,13,-9];
[530007833,-28616,3666,10,3];
function F25() {
    if (!new.target) { throw 'must be called with new'; }
}
const v27 = new F25();
for (let v28 = 0; v28 < 5; v28++) {
    v27 + v28;
}
[-29364,1076371117,654702243,-9007199254740992,4];
[64,1388811964];
const v35 = [1,-65536,35497,4];
[5,-14,-813326501,1073741824,14936];
function F44(a46, a47, a48, a49) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = a46;
    this.f = -9007199254740991;
    this.e = 5.0;
}
const v51 = [];
[1];
const v56 = [-1826419109];
[v56,-1826419109,1,v56,-1826419109];
v51[15] = 0.0;
const v65 = [4,-9];
[-4,-4294967296,-2,-36867,1073741825,5,9007199254740990,3,344774138];
const v67 = [-9,-22666,0,268435439,-268435456,1073741825,-1,-4294967296];
[-952.5254274142907,-1.0,-1.7976931348623157e+308,-886.8178116235033,2.220446049250313e-16,238644.9523292873];
const o72 = {
    4: "getOwnPropertySymbols",
    [v65]: "name",
    get d() {
        return this;
    },
    [v67]: v18,
    [v35]: v18,
};
[NaN,0.8178719460401225,-6.725144267501277,-363834.2466441388,-6.725975081590274,-575597.6246897909,-316.91987195319666];
[9.908011942300938,1000000.0,0.12350560516248354,-1.0,-214.84942484632688,2.0,1000.0,-988.7835760567139,0.4057843481612198,-1000000000.0];
["gBB"];
