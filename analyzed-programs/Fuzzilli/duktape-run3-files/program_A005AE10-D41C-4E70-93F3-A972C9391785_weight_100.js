function f6(a7, a8, a9, a10) {
    const o19 = {
        toString(a12, a13, a14, a15) {
            return 50261;
        },
        __proto__: a8,
        [7]: a8,
        [1000]: 1000,
        "d": a8,
        "a": a7,
    };
    return o19;
}
f6(-9007199254740991, 6, 1000, -4294967295);
f6(6, -9007199254740991, -9007199254740991, 7);
f6(7, 1000, 50261, 7, 50261, -4294967295, 6);
[-65537,9007199254740992,-2,-9007199254740991,-223410442,14613,-387474314,9941,-213335400];
const t13 = 2.220446049250313e-16;
t13[2.220446049250313e-16] = [1.0,-9.306600785424802,-1000000000.0,3.527036730694896e+306,-278490.3527533278,-8.754181679624957e+307,2.220446049250313e-16,-1000.0];
const o32 = {
};
const v33 = !o32;
v33 >> v33;
[-268435456,-865560726,-2066357523,1,255,-2,-47629291,-6,-974685215];
[3,-4294967297,-62393,268435439,-57509,1327];
function F38(a40, a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
}
function F45(a47) {
    if (!new.target) { throw 'must be called with new'; }
    this.sticky = -65535;
    this.d = a47;
}
function f49() {
    return f49;
}
[1000,610164536,1024,16,2147483648,6,13];
-9007199254740990 + f49;
function f54() {
    return "name";
}
new Float32Array();
let v64;
try { v64 = o32["Jt"](); } catch (e) {}
const o66 = {
    4: "getOwnPropertySymbols",
    [v64]: "name",
};
[-4.828609728757649,0.24386730580345295,642760.9936903215,-5.839802031611556e+305,4.1763773184079405,697433.1629372805];
const v69 = [NaN,2.0,1e-15,-1000.0,-2.220446049250313e-16,-380836.56667682296,0.5399258378143029,2.2250738585072014e-308,1000000.0,0.9044575421170946];
const v72 = !-4400;
-(-4400) << v72;
Math.pow(4294967296, v69);
