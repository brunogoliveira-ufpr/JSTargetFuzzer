const v3 = [-493601203,268435440,-493601203,-493601203];
const v4 = [4294967295,4294967295,v3,-493601203];
[v3,v3,-493601203,v3];
let v11 = 0;
do {
    Math.sin(1000000000000.0);
    let v17 = 1000000000000.0 >>> (155048021 - 1000000000000.0);
    ++v17;
    v11++;
} while (v11 < 8)
let v25 = 4;
const v28 = [1.0,-9.306600785424802,-1000000000.0,3.527036730694896e+306,-278490.3527533278,-8.754181679624957e+307,2.220446049250313e-16,-1000.0];
const v29 = new Error(v25, v25, v25);
switch (v3) {
    default:
        break;
}
Error(v11);
new Error();
v4[v29] /= -1.0;
const o35 = {
};
v25 = -1.0;
const v37 = 129 << 129;
const v38 = !o35;
v38 ** v38;
v38 * v38;
Error ^ v37;
v29[v4] = v28;
46661 <= o35[Uint8Array];
