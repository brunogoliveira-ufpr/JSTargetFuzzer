new Uint8ClampedArray(270);
new Uint8Array(5);
new Float32Array(2339);
function F21(a23) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = -65535;
    this.d = a23;
}
const v32 = [16,-4294967296,-65537,-2147483649,-12,-1113313866,9223372036854775807];
[-9007199254740991,5480,-9007199254740990,-23377,-3,39983,26425];
[-498383836,-970117021,-18309,0];
new Uint8Array(3783);
new Float32Array(199);
let v42 = Uint8Array;
new v42(61);
Uint32Array ** undefined;
-1e-15 / -1e-15;
Math.random();
+128;
++v42;
Math.sign(v42, -1000000.0, "RFu");
const o64 = {
};
!o64;
const t23 = -4.0;
t23[-4.0] = [1.0,-9.306600785424802,-1000000000.0,3.527036730694896e+306,-278490.3527533278,-8.754181679624957e+307,2.220446049250313e-16,-1000.0];
function f68(a69, a70) {
    const v72 = new Int8Array(Int8Array, Int8Array);
    const o77 = {
        m(a74) {
            v72[134] >>= v32 & Int16Array;
            return v32;
        },
    };
    const o89 = {
        1247: 1,
        "c": -2,
        valueOf(a79) {
            new Int32Array(256, a79, Int32Array, a70);
            new BigInt64Array(-268435456, a70, -2056899566, 1);
            new Duktape.gc("Co5");
            return BigInt64Array;
        },
    };
    return o89;
}
f68(-2056899566, 1);
f68(1, -2056899566);
f68(-2056899566, -2056899566);
[-0.0,2.2250738585072014e-308,5.0,-889844.170594422];
const v98 = [-1e-15,-289.9471832046843,209.70168337503787,-1000.0,NaN,-Infinity,-0.0];
[0.17837164631481484,-632245.9993895101,546.7741721800762,1.372089147628079e+308,156490.04187028902,-Infinity,5.0];
[-329056.9472098334];
[4.0];
[v98,-268435456,v98,"536870887",-12];
const o109 = {
};
-4294967296 << -329056.9472098334;
const v112 = !o109;
[o109,o109,o109,o109,o109];
v112 * "RFu";
const v115 = new URIError();
const o116 = {
    [v115]: v115,
};
