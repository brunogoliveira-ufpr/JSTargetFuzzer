let v14 = 1073741824;
v14 = 2;
const v19 = new Uint16Array(4096);
new Float32Array(8);
new Uint16Array(14);
const v29 = [-0.0];
[-3.0,-81.01654240358664,-766.993651243036,0.5213030720529913,1e-15,1000000.0,-9.30808266963835,-2.0];
[-7.361729848582604,-5.267971534465248e+307,-423993.5258105998,0.004786555332582432,4.0];
function f32() {
    const v34 = [];
    function F35() {
        if (!new.target) { throw 'must be called with new'; }
        this.g = v34;
        this.h = v34;
        this.c = v34;
    }
    const v37 = new F35();
    const v38 = new F35();
    new F35();
    const v52 = [-493601203,268435440,-493601203,-493601203];
    const v53 = [4294967295,4294967295,v52,-493601203];
    const v54 = [v52,v52,-493601203,v52];
    function f58(a59, a60, a61) {
        const o62 = {
            [276428.55696075386]: a59,
            "g": 268435440,
            6: a59,
        };
        return o62;
    }
    f58(v52, 739020.3861650242, v37);
    f58(257, 276428.55696075386, f58(v53, 276428.55696075386, v38));
    let v68 = 0;
    do {
        function f72(a73, a74) {
            const o87 = {
                "d": a74,
                "a": a73,
                m(a76, a77) {
                    const v82 = -f72;
                    Math.sign(-1e-15 / 16, Math, v82);
                    Math.trunc(arguments);
                    !16;
                    return a73;
                },
            };
            return o87;
        }
        Math.sin(1000000000000.0);
        let v91 = 1000000000000.0 >>> (155048021 - 1000000000000.0);
        ++v91;
        v68++;
    } while (v68 < 8)
    let v99 = 4;
    const v102 = [1.0,-9.306600785424802,-1000000000.0,3.527036730694896e+306,-278490.3527533278,-8.754181679624957e+307,2.220446049250313e-16,-1000.0];
    const v103 = new Error(v99, v99, v99);
    switch (v52) {
        default:
            -9007199254740991 != v54;
            v53[16];
            break;
    }
    Error(v68);
    const v110 = new Error();
    v53[v103] /= -1.0;
    const o114 = {
    };
    v99 = -1.0;
    const v116 = 129 << 129;
    const v117 = !o114;
    v117 ** v117;
    v117 * v117;
    Error ^ v116;
    v103[v53] = v102;
    f58(v110, 2.220446049250313e-16, v53[-5]);
    46661 <= o114[Uint8Array];
    return Float32Array;
    v29[2335] = 536870889;
    return f32;
}
if (false) {
    const t81 = "512";
    t81[190] &= -536870912;
} else {
    v19.b = -536870912;
    const v131 = "object";
}
[1000,610164536,1024,16,2147483648,6,13];
-9007199254740990 * f32;
