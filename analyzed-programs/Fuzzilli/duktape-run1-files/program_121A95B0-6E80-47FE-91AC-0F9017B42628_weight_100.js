const v8 = new Int32Array(4096);
const t1 = 14;
t1.b = v8;
let v9 = [4,-5,1000,2313,-128,4294967297,11833,-2147483649];
v9 += ("0nJlv")[5.341169419571787e+307];
const v13 = [574721085,-1024];
const v14 = new Int32Array();
function f15() {
    return v14;
}
new Uint32Array(5);
const v19 = [-1024,v13,-2098768065,-13773];
new Uint8ClampedArray();
function F22() {
    if (!new.target) { throw 'must be called with new'; }
    this.d = 2038804125;
}
const v25 = new F22();
let v26 = new F22();
v26 = v25;
[v19,v19,-1024];
[28383,-1847584945,37898,1548136726,-1137295492,3,-5];
[1000,4294967295,255,-6,0,4294967296];
[-65537,-9223372036854775807];
let v32 = 0.7872588412650194;
const v33 = ++v32;
let v34 = 9007199254740992;
let v36 = 64;
let v39 = -131979914 >>> (-131979914 * -131979914);
let v40 = 0;
while (v40 < 255) {
    v36 >>= 2147483649;
    v34 - v34;
    ++v34;
    v39--;
    62715 / 62715;
    v40++;
}
let v52 = -749336124 % v32;
-131979914 >>> (-131979914 * -131979914);
new Int8Array(11);
const v59 = ++v52;
Function(v52);
v59 / v33;
