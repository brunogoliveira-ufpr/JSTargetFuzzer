[-1.353911410407835e+308,566365.8322951498,-5.0];
const v1 = [0.19753867512189127,6.659890839210035e+307,1e-15,-1000000.0];
[1000000000.0,0.11922121837394362,266249.0418631914,-1e-15,-4.0,-1000000000000.0,3.0,108725.66551423329,0.15070894021132053,-487767.4218636743];
let v15 = 0;
const v19 = new Uint8ClampedArray("function", v15, v15++);
let v20;
try { v20 = v19.map(); } catch (e) {}
function f21() {
    return v19;
}
13 << v20;
"-59858" && v20;
const v28 = new Int8Array(-2.220446049250313e-16);
v28[90] = 4096;
const v31 = [[[f21,8,f21,"undefined","-59858"],8,f21]];
let v35 = 64;
++v35;
const v39 = new Uint8ClampedArray(16);
delete v39[3];
function F41(a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    F41.c = a43;
    this.f = v1;
    this.a = a43;
}
new F41(v31, -64613);
new F41(-64613, -4096);
new F41(-64613, -64613);
[-1000000000.0,2.2250738585072014e-308,-5.0,0.4156831225944775,-149546.58915875235,2.220446049250313e-16] < 65536;
while (0 < 0) {
}
4096 % 132.84333894457086;
new Uint16Array(Uint16Array);
0 < 0;
