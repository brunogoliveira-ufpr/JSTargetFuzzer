let v1 = 268435440;
const v4 = [0.36711602970314916,-1000.0,1.6278150495630484e+307,8.207309287163739,-179.771524564792,0.7114320532610385,-3.946351656519638e+307];
const v5 = [-1000000.0,1.0,-0.0];
const v6 = [-1.0,-6.5983628671439565,1.0,0.0,6.796111500777702,2.220446049250313e-16,-380624.72330834216,-1000000000.0];
const v7 = [v6];
const v8 = [v4,v4];
++v1;
const v14 = (v6 / v8) | v6;
v6 || -47626;
Math.acos(v14);
536870912 & 536870912;
v1 - v6;
[1974667416,v7,v6];
const t9 = 0.0;
t9[10] ||= 7;
const t15 = 869162575;
t15.length = 1;
new Uint8Array(7);
let v34;
try {
const t0 = -8;
v34 = t0();
} catch (e) {}
-8 !== 3;
new Uint8Array(v5);
[6,-1859649222,6,1313064498,1448947629,1024,-65537];
[-203843882,9007199254740991,-9007199254740991];
const t25 = [-14050];
t25.toString = v34;
new Float32Array(1);
function F50(a52, a53, a54, a55) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = -2147483648;
    a53.b = a53;
}
new F50(Uint8Array, 536870912, 9, 0.0);
function f57(a58, a59) {
    const o60 = {
        [f57]: v34,
        [a59]: a58,
    };
    return o60;
}
let v63 = new Uint32Array(13);
v63--;
