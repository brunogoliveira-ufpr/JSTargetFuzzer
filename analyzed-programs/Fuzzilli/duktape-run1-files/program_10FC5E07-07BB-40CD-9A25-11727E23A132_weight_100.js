new Int32Array(2);
const v4 = new Uint8ClampedArray(Uint8ClampedArray);
try { v4.map(); } catch (e) {}
const v9 = new String(128);
v9[90] = 4096;
new Float64Array(16);
-131979914 * -131979914;
Uint16Array == this;
new Uint8ClampedArray(13);
const v21 = [1024,56295,128];
function f22() {
}
const v23 = [];
const v24 = [16,256,839,6,-2147483648,-256,-1889703699,536870888,128];
const o40 = {
    "c": v23,
    "f": v24,
    o(a26, a27) {
        [-9007199254740992,1073741825];
        [256,4294967296,-65262,8,-1];
        const v30 = [1546630422,-9007199254740992,-15,5,536870912,-65536,-4294967295,-3,-16,-268435456];
        let v32 = -1073741824;
        const v35 = ~-6.37566722084612;
        Math.abs(v21);
        -v35;
        v32++;
        v32 * v35;
        return v30;
    },
};
[9007199254740991,1073741825];
[2147483647,-14,-11,-4294967295];
new Uint8Array();
const v51 = new Uint8ClampedArray(3313);
v51["p" + 54402] = 54402;
v51[Uint16Array];
54402 ** "unicode";
function F56(a58, a59, a60, a61) {
    if (!new.target) { throw 'must be called with new'; }
}
0 < 0;
const v65 = [-9007199254740990,-1853358901,-1593980262,9007199254740990,557226931,2147483647];
Array(Uint8Array);
Uint8Array >= v65;
[-6,3,-9007199254740991,-14,-1024,-9007199254740992,9007199254740990];
[9007199254740991,-4294967297,1000,-9223372036854775808,9007199254740991,2026517738];
const t43 = 268435441;
t43.__proto__ = v21;
const v73 = [22289];
const v74 = [-233951307,-4294967295,-16539,1073741824,51550,127,14757,-2,26537,-1590790454];
const v77 = ([128,-9007199254740991]).__proto__;
for (let v78 = 0; v78 < 32; v78++) {
    const t52 = "p";
    t52[7] = v78;
    try { v77(v74, 16, v78); } catch (e) {}
    v73["p" + v78] = v78;
}
v21 != F56;
