let v0 = 1512559583;
const v5 = [-2135735777,129,65536,5,-65537,-10,-1337586595,45256];
const v6 = [1,-9223372036854775808,-2053161822,10000,-440874733];
v0 = 1024;
const o8 = {
};
new ReferenceError(v5, o8);
const v11 = [64213,1465307329,-9223372036854775807,-12,3];
[10000,-268435456,-65535];
[-56667,1073741823,-52891,52709,-11,4,-65536];
[8121,5,59492];
[-65536,536870912,-2147483648,-9223372036854775808,9007199254740991,-25412,-2147483648,-15];
const v19 = [6,10,54399,6];
[19275,-14,512,-9,-8,-16246737,2405];
const v24 = [4294967296,-1511855080,61187919];
function F27(a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    a29 >= this;
    a30++;
    "aM" | v24;
}
new F27();
new F27("charCodeAt", v24);
[808855880,28625,-1,129,-11,16,18410];
[114498546,-3,-5,268435441,536870887,-9007199254740991];
const v39 = [13,-9007199254740992,-17307];
for (const v40 in v11) {
    v19[v40] += -3.5171208378057344;
    const o41 = {
    };
    new Proxy(v6, o41);
}
new Uint32Array(4);
new Uint8ClampedArray(16);
0 < 0;
new Int16Array(5);
const v64 = new Int32Array(8, 8, "charCodeAt", v39);
new Uint8Array();
const t38 = -44531;
t38.buffer = -44531;
"symbol" === "number";
v64 >= 8;
