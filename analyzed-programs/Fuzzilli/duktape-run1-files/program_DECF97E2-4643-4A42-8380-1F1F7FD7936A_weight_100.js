for (const v5 in 65535) {
    v5[v5] = v5;
    const v7 = Symbol.species;
    const t3 = 512;
    t3[v7] = v7;
}
new Uint8ClampedArray(144);
new Int32Array(4096);
new Float64Array(372);
const v21 = [16,16,-9585,16,1024];
const v22 = [1024,v21,v21,-9585,v21];
const v23 = [v22,v22,16];
[6.200937839635837e+307,-8.476455850126367];
[-2.220446049250313e-16,-6.8811904631169085,-708413.1011558939,-0.15570177038820354];
v23[3] = 1024;
16 === -9007199254740990;
let v27;
try { v27 = v23.findIndex(v22, v22); } catch (e) {}
let v32 = v21 | 4096;
const v33 = 4 + -50358;
let v34 = -15068;
v34--;
v32 % v33;
4096 && v21;
v32--;
[2.097996265732821,2.0,2.2250738585072014e-308,9.455555298556217];
[3.0,1000.0,-1.8727207007727657e+307,-594316.565954135,-0.0,Infinity,1.3865561830405098e+308,-746.3112669203426];
[1.7976931348623157e+308,1000000000000.0,1000000.0,-5.0,1e-15];
const t21 = [-3.0,-264.95750739362074,-1000000.0];
t21.length = 0;
function f46(a47, a48) {
    let v51 = 8;
    Math.tan(a48);
    const v54 = ~257;
    Math.atan2(257, 16);
    Math.abs(257);
    v54 & v51;
    Math[v51 = Math.acos(v54)];
    function f61() {
        return v27;
    }
    return -1e-15;
}
f46(0, 0);
