[-1000000000.0,0.2675008771559858];
[-5.0,0.964992037543035,-765.1126881779091,2.220446049250313e-16,803258.8508569205,0.1578991159987816,0.7073796042062044];
[-643234.0584087276];
new Uint8ClampedArray(4096);
new Int16Array(3);
new Int32Array(2892);
let v18 = 1512559583;
let v19 = 1024;
const v23 = [-2135735777,129,65536,5,-65537,-10,-1337586595,45256];
const v24 = [1,-9223372036854775808,-2053161822,10000,-440874733];
v18 = v19;
const o26 = {
};
new ReferenceError(v23, o26);
const v29 = [64213,1465307329,-9223372036854775807,-12,3];
[10000,-268435456,-65535];
[-56667,1073741823,-52891,52709,-11,4,-65536];
[8121,5,59492];
[-65536,536870912,-2147483648,-9223372036854775808,9007199254740991,-25412,-2147483648,-15];
const v37 = [6,10,54399,6];
[19275,-14,512,-9,-8,-16246737,2405];
const v42 = [4294967296,-1511855080,61187919];
function F45(a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    a47 >= this;
    v19++;
    "aM" | v42;
}
new F45();
new F45("charCodeAt", v42);
[808855880,28625,-1,129,-11,16,18410];
[114498546,-3,-5,268435441,536870887,-9007199254740991];
const v57 = [13,-9007199254740992,-17307];
for (const v58 in v29) {
    v37[v58] += -3.5171208378057344;
    const o59 = {
    };
    new Proxy(v24, o59);
}
new Uint32Array(4);
new Uint8ClampedArray(16);
0 < 0;
new Int16Array(5);
const v82 = new Int32Array(8, 8, "charCodeAt", v57);
new Uint8Array();
const t45 = -44531;
t45.buffer = 0;
"symbol" === "number";
v82 >= 8;
