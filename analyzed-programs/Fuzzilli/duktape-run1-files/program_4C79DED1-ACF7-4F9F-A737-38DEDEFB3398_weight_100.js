function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a8;
}
new F6(2, 5);
const v11 = [0.17983150415623883,-6.100396834903698,-2.220446049250313e-16,1.2842338231788134e+308,0.3141229683371112,-7.855961144999915,1000000000.0,-5.0,-1.7976931348623157e+308,-2.220446049250313e-16];
[-1.5575231939768736e+307,2.220446049250313e-16,-Infinity,634.7051658557389,-1.9486956207729058,-203.35513341181047];
const v13 = [-1.7976931348623157e+308,-Infinity,1000000000000.0,-148020.16484699724,789.0901282669529,2.220446049250313e-16];
[0.9436946011089504,542053.8196784884,0.026951521498944087];
let v18 = 0;
do {
    v13[v11[9223372036854775807]] /= 36976;
    v18++;
} while (v18 < 6)
[-1000000000000.0,1000000000.0];
const v24 = [-2.1209203863012966,0.7762273246907329,0.13315107641951418,1000000000000.0,0.0,-1.7976931348623157e+308];
[[9223372036854775807,v13,v24,v11,36976],v24,v13];
[v13,36976];
new Uint8ClampedArray(8);
new Uint8Array(2);
new Uint16Array(127);
"number" === "number";
new F6(5, 5);
new F6(-65537, 268435439);
[-2,8,-58829,4507,14,255,129];
[4294967296];
[2];
const v47 = new Int8Array(128);
let v48 = 0;
while (v48 < 7) {
    v47[90] = 4096;
    v48++;
}
