new Uint32Array(14);
new Int8Array(8);
new Float32Array(128);
const v14 = new Int16Array();
for (const v15 in v14) {
}
"symbol" + Uint32Array;
new Int8Array();
Int8Array >= -905909.6603291023;
const t8 = [5.262457569570156,1.7976931348623157e+308,-1.7976931348623157e+308,-3.0,-905109.041697038,0.2570789371873976,5.915115177751346];
t8[[5.0,0.35966634621177385,-872.7559926356663,-602.6347451491949,3.0,1000.0,-1.455521934238513e+308,-2.348008365508094,-1e-15,-8.580364342777324]] = [2.2250738585072014e-308,-1.7976931348623157e+308,-1000000.0] < 257;
const v27 = new Uint8ClampedArray();
const v29 = new Uint8Array();
new Uint16Array("91");
const v36 = ["number"];
const v37 = [true,v36,v36];
const v38 = [16627,-8,-815408277,256,-64721,1073741824,-1146738008,6,8];
const v40 = [v37,"number",[-8756,-54281,986968617,-12,0,536870889]];
v40 < v38 ? v40 : v38;
let v43;
try { v43 = v27.map(Uint8Array, v29); } catch (e) {}
v29.length = -44531;
v29.toString = v43;
