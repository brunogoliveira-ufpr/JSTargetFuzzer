const v3 = [119762.62755017751,794913.2723556764,-1000000.0,2.220446049250313e-16,-1e-15,-5.0];
const v4 = [-4.0,5.0,-34.686929064169135,1000000.0,6.968810953360467,5.0,-930.9669003731183,1.7976931348623157e+308,-4.546946366629408];
const v5 = [377257.61057590786,-1.0,-Infinity,680.4359087554701,0.17327669778436472,7.808786971320959];
const v6 = [v5,v3,v5,v4];
[9007199254740990,[-2147483649,9007199254740990,v5,v6,v6],v6,v5];
let v13 = 0;
const v17 = new Uint8ClampedArray("function", v13, v13++);
let v18;
try { v18 = v17.map(); } catch (e) {}
function f19() {
    return "undefined";
}
(13 << v6) && v18;
const v26 = new Int8Array(128);
v26[90] = 4096;
const v27 = [f19,f19,f19,"undefined","-59858"];
[[v27,v27,f19]];
let v33 = 64;
++v33;
const v37 = new Uint8ClampedArray(16);
delete v37[3];
function F39(a41, a42) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a41;
    this.f = "-59858";
    this.a = a41;
}
new F39(-4096, -64613);
new F39(-64613, -4096);
new F39(-64613, -64613);
[-1000000000.0,2.2250738585072014e-308,-5.0,0.4156831225944775,-149546.58915875235,2.220446049250313e-16] < 257;
while (0 < 0) {
}
-2147483647 % 132.84333894457086;
new Uint16Array(Uint16Array);
0 < 0;
