new Float64Array(3);
new Uint8ClampedArray(6);
new Int32Array(0);
const v16 = [0.15108018089234088,0.15108018089234088,[332.5992374524228,0.15108018089234088,332.5992374524228,332.5992374524228],1000000.0,332.5992374524228];
[1000000.0,0.15108018089234088,332.5992374524228,v16,v16];
new Uint8Array(2269);
function F25(a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a27;
    this.f = "-59858";
    this.a = a27;
}
new Int16Array(2574);
new Float32Array(2887);
new Int8Array(35);
function f38() {
}
let v39 = 9007199254740992;
function F45(a47, a48, a49, a50) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = f38;
    this.f = f38;
}
const v51 = new F45(-41191, -14, 16, v39);
const v52 = [-15,1074160824,6911,512,-4294967295];
[30096,16,4294967297,-1616,9223372036854775807];
v51.__proto__ = [9007199254740991,-4294967297,1000,-9223372036854775808,9007199254740991,2026517738];
v52 != F45;
new F45(-41191, -41191, -14, -41191);
new F45(-41191, 2147483649, 9007199254740990, 2147483649);
new String();
"symbol" + "-59858";
const t31 = "dotAll";
t31[Reflect.apply(("L9").includes, "L9")] = 332.5992374524228;
let v67 = 64;
new Uint32Array(v67);
new Int8Array(12);
new Uint16Array(3);
[-536870912,51526,536870887,-1424154847,536870912,2147483648,5,-13,1000,1590462600];
const v79 = -0;
let v82 = -131979914 >>> (-131979914 * -131979914);
let v83 = 0;
while (v83 < 9) {
    v67 >>= 2147483649;
    v39 - v39;
    v39++;
    v82--;
    62715 / Int8Array;
    v83++;
}
v79 + -4294967296;
