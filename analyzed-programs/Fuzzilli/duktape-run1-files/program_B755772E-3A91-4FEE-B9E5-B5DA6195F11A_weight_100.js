function f3() {
    return -1.0965832810668835e+308;
}
[Infinity];
[-4.0];
[0.7102104008232264,524715.2627663543,128575.75269864732,-411501.6278967047];
const v18 = new Int16Array(4);
const v21 = new Float64Array(62);
new Uint8Array(62);
if (65535) {
    const v33 = ["object","function"];
    const v34 = ["object",-59919,v33,v33,v33];
    [v34,v34,"unicode",536870912];
} else {
    54402 ** 54402;
    let v39 = 0;
    do {
        v18.__proto__ = "unicode";
        v39++;
    } while (v39 < 10)
    [33583,536870912,-34620,-892069626,1073741823,3,-9007199254740992,1000];
    [14,1,-9223372036854775807,583435053,2,268435440];
    [-12,-1808675075,-1,52022,-7,523,236002832,1000,255];
    ("unicode").length;
    ~"9007199254740992";
    Math.fround(54402);
}
let v52 = "matchAll";
["n",[1,536870912],"n"];
["object","function"];
function F56(a58, a59, a60, a61) {
    if (!new.target) { throw 'must be called with new'; }
}
const v62 = new F56();
const v63 = [-15,1074160824,6911,512,-4294967295];
const v64 = [9007199254740991,-4294967297,1000,-9223372036854775808,9007199254740991,2026517738];
v62.__proto__ = v64;
-Infinity;
v63[6] = v52;
v64[2];
v52 ||= "object";
let v71 = 268435440;
const v72 = -536870912 + v21;
let v73 = !-536870912;
Math.atan2(v21, v72);
const v75 = --v73;
const v76 = v71++;
!v75;
v76 >> 1;
if (v71) {
    f3();
} else {
    v18[0] ^= -59919;
    F56 |= F56;
}
v63 != F56;
