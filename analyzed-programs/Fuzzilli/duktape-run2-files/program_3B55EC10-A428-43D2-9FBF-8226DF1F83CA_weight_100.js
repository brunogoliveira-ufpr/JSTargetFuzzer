const v2 = new Uint32Array(0);
new Uint16Array(6);
v2.g = -128;
new Uint8Array(2248, 2248);
function f19() {
    return -268435456;
}
f19();
let v21 = "-1" << f19;
v21--;
function f24() {
    return -2.220446049250313e-16;
}
const v40 = [1024];
const v41 = [2147483649,-23485,268435440,2,-24257,-4294967297];
const v42 = [65535,268435456,129,-3,-65535,3,-61452,-1073741824,-1,-2];
function f43(a44, a45, a46, a47) {
    const o63 = {
        [4096]: 257,
        "d": a45,
        13: v40,
        177: v40,
        "f": 1,
        "h": 3,
        get c() {
            return this;
        },
        "f": 536870912,
        get c() {
            return this;
        },
        __proto__: v41,
        "e": 0,
        "c": v42,
        set g(a51) {
            [6.944405391947694,-1e-15,-1.0,0.1310050685711972,-854118.585424835,3.983450119399876,-1.0,-2.220446049250313e-16];
            [-6.724625623995544,-7.912522178953452,1000000000000.0,-1000000000000.0,997.5041904210957,4.0,0.12576673877543376,-1.1493779838620506e+308];
            [1000000000000.0,-270.8408810754903,-1000000000000.0,1e-15,2.2250738585072014e-308,1000.0];
            a51[864] ||= -536870912;
            try { a44(a47); } catch (e) {}
            v40.a = 1024;
            6 <= a51;
            let v61 = 1;
            v61++;
        },
    };
    return o63;
}
f43(f43(f43(257, 4294967296, 633061257, 3), -536870912, 4294967296, 10000), 10000, 1, 10000);
let v67 = 8;
(1.7976931348623157e+308 >>> [2147483649,264886449,4294967297,-2147483647,7,1334909290,-12,1073741824,-128,9007199254740992]) & ++v67;
function F75(a77, a78) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = "global";
}
new F75("global", "p");
const v81 = [Uint8Array];
const v82 = [1024];
let v83 = 8;
(1.7976931348623157e+308 >>> v82) & ++v83;
Math.tan([-1,65535,-2147483647,185676322,9]);
new Uint32Array(14);
let v92 = 3406;
v92++;
const o120 = {
    "c": v81,
    "g": "-2147483648",
    "e": 0,
    "a": "-2147483648",
    set f(a95) {
        a95 * this;
        let v97 = 0;
        do {
            new BigUint64Array(187);
            [255,8,512,8,1073741824,10];
            [-7];
            [9,536870887,128,-36032];
            let v107 = a95 % a95;
            v107++;
            -1177098980 - -1177098980;
            Math.exp(this);
            Math.asin(v107);
            new Uint32Array(6);
            new Float32Array(3527);
            v97++;
        } while (v97 < 0)
    },
};
[4.0,-4.0,8.358268625551239e+306];
6 <= 6;
