function f0() {
}
function f1() {
    return f0;
}
let v6 = [-1024,-4096,8,-5,-661,-2,128,1569217128,53988];
[2147483649,264886449,4294967297,-2147483647,7,1334909290,-12,1073741824,-128,9007199254740992];
const v8 = [-4294967296,-1,-6,16,1462841887,-8,-65535,0];
const v16 = [65537,"-1024",65537,65537,65537];
let v17 = [];
function f18(a19, a20) {
    v8.toString = a20;
    const v23 = [1000.0];
    [-1.4418230383197164e+308,0.301804417836947,-1000000000000.0,4.0,1000000000.0,-1000.0,-0.0];
    const v25 = [588065.6683242572,-494.83908777208205,NaN];
    const v26 = [-1.7976931348623157e+308,6.085047468402518e+307,418014.6557672722,-1000000000.0,-8.086888234374916e+307,1.7976931348623157e+308,740.7899513083887,-2.0,-Infinity];
    const v29 = new Int16Array();
    new Uint16Array(10);
    v23.__proto__ = v29;
    for (let v32 = 0; v32 < 32; v32++) {
        v26["p" + v32] = v32;
    }
    v25[5] >>= 10;
    ++v17;
    +65537;
    1.7976931348623157e+308 >>> v16;
    -268435456 & ++v6;
    return a19;
}
f18(v16);
function F51(a53, a54, a55) {
    if (!new.target) { throw 'must be called with new'; }
}
const v56 = new F51();
const v57 = new F51(v56, v56, v56);
v56 !== v57;
let v59 = 256;
const v62 = !(5 ^ 5) >>> v59;
v59++;
-v62;
