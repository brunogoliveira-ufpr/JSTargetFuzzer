function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.e = -256;
    this.h = -256;
}
new F0();
new F0();
new F0();
[-981.517554483146,0.6206079014182507,-485233.1808970505,-4.0,5.0,8.307451132836189];
[1.0,1e-15,-25.715159687526693,-1.701490853885856e+308,-2.220446049250313e-16];
[1000.0];
const v9 = [25444,-43343,-1872302988,1857351883,2147483647,-1635872865,-2147483649,129,-59401];
[-4294967297,9,-1587473947,-1,-2027422767,64];
[17818];
const v14 = new Array(16);
16 * v14;
const v16 = Array.prototype;
const v26 = [784310004,v16];
let v27 = Array;
const v29 = v27(255);
for (let v32 = 0; v32 < 5; v32++) {
    v27.__proto__;
    v27[-115489985] = v29;
    128 >>> v27;
    const v38 = 536870888 << v9;
    v38 - (v9 | 8);
    Math.acos(v38);
}
const v44 = ++v27;
0.19017189501748666 & v29;
Math.cos(v44);
~v27;
v27 || v27;
const v49 = [v26,v14,784310004,1877581954,v16];
const v50 = [v49,16,v16,-1359911438,v49];
v16[64] = Array;
v50 > v26 ? v50 : v26;
new Date();
function f55() {
    return 784310004;
}
[Infinity,-4.0,0.09621297794026296,-577.2760074781743,72096.44976396044,0.2698029281890012,1e-15];
[Infinity,0.7017450677128314,-0.6861496125472826,188989.32474934915,-1.0,-1.5857780086312884e+307,-9.908982691067836,-4.801355659737476e+307];
[-0.0,2.0,-1000000000000.0,-0.0];
const v60 = new Int8Array(Int8Array, Int8Array, Int8Array);
const v61 = [-12,-37215,-9007199254740990,6,-60705,9,1073741824];
[1000,-2106386827,2147483649,-65536];
try { v61.some(v61); } catch (e) {}
v60.length;
