function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = -1024;
}
const v3 = new F0();
new F0();
new F0();
[1000000000.0,-2.220446049250313e-16,-5.7042399998611675,-4.498170783960056,-1e-15,5.0,-1000.0,8.609312339504346];
[5.431012691723694,-0.0,1000000000000.0,2.220446049250313e-16,7.658868490916235e+307,-5.995063170637218,-1.0,0.4321427455837409,973.7191286792483];
[1e-15,0.8550394629601517,623850.2992217501,1e-15];
new Uint32Array(6);
new Uint16Array(207);
new Uint8Array(6);
const v21 = [521247455,1171777306];
const v22 = [-38341];
const v23 = [65535,-3,63948,4,-1610706927,-10,70609133];
let v28 = 0;
do {
    new Uint32Array(v21, -9007199254740992);
    try { v3(); } catch (e) {}
    var d = -2147483648;
    v28++;
} while (v28 < 1)
const v36 = [1000000.0,1.0,1.0,-1e-15,2.220446049250313e-16,9.534590717572858];
const v37 = [1000000000.0,0.0,-1e-15,-103.19546674465221,1000000000.0,1000000.0];
[-6.230235158456132,0.9493065327996897,-1e-15,1e-15,-7.943727727272192,-6.14963798768601,NaN];
let v39;
try { v39 = v28(-977811.1711363766, 3081); } catch (e) {}
try { v39(v39, -2147483648, v39, v28); } catch (e) {}
function F46(a48, a49, a50) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(Symbol, "f", { configurable: true, set: RangeError });
    a49 >= a50;
    const v54 = Symbol;
}
const v55 = new F46(v37, -268435456, 5);
new F46(v55, v22, v55, v55);
v21 !== v36;
let v58 = 256;
5 ^ 5;
!6710 >>> v23;
v58++;
-(-2147483648);
