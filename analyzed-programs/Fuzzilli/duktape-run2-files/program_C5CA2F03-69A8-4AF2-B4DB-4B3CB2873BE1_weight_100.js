[-3606,-4096,268435456,-4294967296,-6,268435441,-1996,-9,-1788,-252683627];
[65536,47836,6356,536870887,-4294967297,-4666,2147483647];
[5,4583,-1215130986,16807,16,-2,58895,-1873483486];
new Int32Array(0);
new Uint8ClampedArray(3);
new Float32Array(2067);
[-418084.663026314,2.2250738585072014e-308,2.220446049250313e-16,1e-15,846.627960302219,-1.7042437725555098e+308,-0.0,-Infinity,-2.938036739381678,-1.7976931348623157e+308];
[-2.2250738585072014e-308,-Infinity,5.0,-2.2250738585072014e-308,-2.220446049250313e-16];
[-2.220446049250313e-16,1e-15,0.9950188411876568,2.220446049250313e-16,617.3735674113684,4.0,69.48665704365226,-0.0];
const v31 = new Float32Array();
const v33 = [-6,2123568490,4,0,-128,57886,536870889,-1460943464,4294967296,1];
const v34 = [-984399390];
try { v34(); } catch (e) {}
function F38(a40) {
    if (!new.target) { throw 'must be called with new'; }
}
new F38();
const v43 = new Uint8Array();
v43 >>> Uint32Array;
v31.length = 2147483648;
v33.splice(1073741824, 255);
for (const v47 in v33) {
}
