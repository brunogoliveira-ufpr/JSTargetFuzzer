[-3.0,5.0,-5.777074971225531,1.7976931348623157e+308,Infinity];
const v1 = [2.220446049250313e-16,272514.8267656495,-5.0];
const v2 = [-3.0,5.0,-1e-15,-225820.72432852734,0.001710617311595941,5.0];
1 << 0;
[65537];
new Uint8Array(2746);
new Uint16Array(2322);
new Float64Array(2340);
function F20() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = 65535;
    this.c = 65535;
    this.d = 65535;
}
const v23 = new F20();
const v24 = new F20();
if (F20) {
    const v25 = [-4,-1024,-9007199254740990,11,14,1623223138,9007199254740990,2147483648,1000,-4294967296];
    const v26 = [-665.7635177134545,1e-15,1000.0,0.0,-2.2250738585072014e-308,-1.0,9.44657293149698,2.0,150.59257940676684];
    new Date([-569918.8195699443,1000000000000.0,-704.7139979660465,-992.5748628484316,985782.3309202995,5.443677468168707e+307,0.5412068066006444], v25, v26, F20);
    6 <= 6;
    [4294967296,-574724218,10,-422232375,256,1073741824,4294967296];
    [-12];
} else {
    !(5 ^ 5) >>> 3;
}
const v41 = new F20();
const v42 = [v23,v24,v41,v41,v41];
function F43(a45) {
    if (!new.target) { throw 'must be called with new'; }
}
const v47 = [-6,2123568490,4,0,-128,57886,536870889,-1460943464,4294967296,1];
v47.splice(1073741824, 255);
for (const v50 in v47) {
}
const v51 = [v24,v41,F20,F20];
const v52 = [v51,v51,v41];
v47.g = v47;
v2.d = v1;
new Object(2633);
[536870887,256,-536870912,-15577,-1,-65536,29803294];
[1547794341,129];
const v61 = [1e-15,-Infinity,253.1243755925159,39.86142292353884,800.8810847464149,-1e-15,-0.0];
v42.h = v24;
let v64 = 7;
v64 = 255;
function F66(a68, a69, a70, a71) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = 1;
    this.f = -43145;
}
new Uint32Array(v64, v52, v42);
([])[16];
-12430 % 980;
const v81 = new Uint32Array(16, -2147483649, 16);
v81 <= 16;
const v83 = [];
let v84 = [-11,9007199254740991,-5,268435441,-9007199254740992,7,-547390662,48243,4,953648060];
v84 = v83;
let v85 = -128;
new ArrayBuffer(ArrayBuffer, ArrayBuffer);
new Int32Array();
const v90 = v61 ** v85;
v85 % -2147483649;
v85++;
v52.indexOf;
v90 / v90;
