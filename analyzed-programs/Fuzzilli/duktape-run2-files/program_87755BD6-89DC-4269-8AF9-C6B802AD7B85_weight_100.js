[-1.7976931348623157e+308,486357.20337069477,-2.4425149159618336,-6.671274073925869e+307,3.0,0.16282455838429855,0.3902407664403562,0.8247394962728664,0.49302927534868457,4.0];
[-1e-15,-9.228780403147795,NaN,0.0,664669.0134937749,2.2250738585072014e-308,8.684667728891256,434738.294315869,-0.0,0.0685901220225984];
const v2 = [-1e-15,257288.63317618752,-7.230910203757971e+306,-1000000.0,2.0981899506394028e+306];
function F12() {
    if (!new.target) { throw 'must be called with new'; }
    this.d = 10000;
    this.e = 10000;
    this.b = 10000;
    this[F12] |= 10000;
    let v16 = 0;
    while (v16 < 1) {
        new Int8Array(2075);
        new Int16Array(519);
        new Int16Array(1024);
        v16++;
    }
    let v30 = ~65536;
    const v31 = 10000 | v30;
    this.b >>= ++v30;
    for (let v33 = 0; v33 < 32; v33++) {
        Math["p" + v33] = v33;
    }
    65536 % 65536;
    v31 / 10000;
}
const v38 = new F12();
const v39 = new F12();
let v42 = 65536;
const v44 = v42 | v2;
v2 + -48044;
--v42;
-(-48044);
v2 << v44;
const v49 = new F12();
[-1000000000000.0,-1000.0,-34631.8749540695,0.15235343101397159,494.6406893034409,-46350.41258539993,-1000.0,556257.7094948704,-1.7976931348623157e+308,5.0];
[3.0,7.534246138465733,1e-15];
[48857.04908600007,1.3713257339325883e+308,357.89209813985894,1.0,Infinity];
new Uint32Array(0);
function F59(a61, a62, a63) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = a61;
    this.c = a63;
}
new F59(v39, v49, 0);
new F59(v38, v38, Uint32Array);
new F59(v49, v39, v49);
new Float32Array(0);
new Uint8Array(1);
function F71(a73, a74, a75, a76) {
    if (!new.target) { throw 'must be called with new'; }
    const v77 = [a75];
    for (let v79 = 0; v79 < 5; v79++) {
        const t52 = "-1597015378";
        t52["p" + v79] = v79;
    }
    v77["indexOf"]();
}
new F71(F71, F71, F71, F71);
