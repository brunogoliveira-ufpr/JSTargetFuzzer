new Date();
function f5() {
    return Date;
}
[268435439,-46906,-20203,536870888,0,-18434,5,128,-2147483647];
[2,268435440,-9007199254740990,57513,255,2147483647];
[9007199254740990,4,-9007199254740990,-484142791,1754141442,536870888,-1024,129];
[-1.7976931348623157e+308,486357.20337069477,-2.4425149159618336,-6.671274073925869e+307,3.0,0.16282455838429855,0.3902407664403562,0.8247394962728664,0.49302927534868457,4.0];
[-1e-15,-9.228780403147795,NaN,0.0,664669.0134937749,2.2250738585072014e-308,8.684667728891256,434738.294315869,-0.0,0.0685901220225984];
const v17 = [-1e-15,257288.63317618752,-7.230910203757971e+306,-1000000.0,2.0981899506394028e+306];
function F27() {
    if (!new.target) { throw 'must be called with new'; }
    this.d = 10000;
    this.e = 10000;
    this.b = 10000;
    this[F27] |= 10000;
    let v31 = 0;
    while (v31 < 1) {
        new Int8Array(127);
        new Int16Array(519);
        new Int16Array(1024);
        v31++;
    }
    let v45 = ~65536;
    const v46 = 10000 | v45;
    this.b >>= ++v45;
    for (let v48 = 0; v48 < 32; v48++) {
        Math["p" + v48] = v48;
    }
    65536 % 65536;
    v46 / 10000;
}
const v53 = new F27();
const v54 = new F27();
let v57 = 65536;
const v59 = v57 | v17;
v17 + -48044;
--v57;
-(-48044);
v17 << v59;
const v64 = new F27();
[-1000000000000.0,-1000.0,-34631.8749540695,0.15235343101397159,494.6406893034409,-46350.41258539993,-1000.0,556257.7094948704,-1.7976931348623157e+308,5.0];
[3.0,7.534246138465733,1e-15];
[48857.04908600007,1.3713257339325883e+308,357.89209813985894,1.0,Infinity];
new Uint32Array(0);
function F74(a76, a77, a78) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = a76;
    this.c = a78;
}
new F74(v54, v64, 0);
new F74(v53, v53, Uint32Array);
new F74(v64, v54, v64);
new Float32Array(0);
new Uint8Array(1);
function F86(a88, a89, a90, a91) {
    if (!new.target) { throw 'must be called with new'; }
    const v92 = [a90];
    for (let v94 = 0; v94 < 5; v94++) {
        const t59 = "-1597015378";
        t59["p" + v94] = v94;
    }
    v92["indexOf"]();
}
new F86(F86, F86, F86, F86);
