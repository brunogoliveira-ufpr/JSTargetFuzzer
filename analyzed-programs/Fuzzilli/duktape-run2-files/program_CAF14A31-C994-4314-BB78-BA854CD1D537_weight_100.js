const v9 = [-8,-12,-65536];
[v9,[268435439,"5",v9,-11,-8],-12];
function F12() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = -1024;
}
const v15 = new F12();
new F12();
new F12();
[1000000000.0,-2.220446049250313e-16,-5.7042399998611675,-4.498170783960056,-1e-15,5.0,-1000.0,8.609312339504346];
[5.431012691723694,-0.0,1000000000000.0,2.220446049250313e-16,7.658868490916235e+307,-5.995063170637218,-1.0,0.4321427455837409,973.7191286792483];
[1e-15,0.8550394629601517,623850.2992217501,1e-15];
new Uint32Array(6);
new Uint16Array(207);
new Uint8Array(6);
const v33 = [521247455,1171777306];
const v34 = [-38341];
const v35 = [65535,-3,63948,4,-1610706927,-10,70609133];
let v40 = 0;
do {
    new Uint32Array(v33, -9007199254740992);
    try { v15(); } catch (e) {}
    var d = -2147483648;
    v40++;
} while (v40 < 1)
const v48 = [1000000.0,1.0,1.0,-1e-15,2.220446049250313e-16,9.534590717572858];
const v49 = [1000000000.0,0.0,-1e-15,-103.19546674465221,1000000000.0,1000000.0];
[-6.230235158456132,0.9493065327996897,-1e-15,1e-15,-7.943727727272192,-6.14963798768601,NaN];
let v51;
try { v51 = v40(-977811.1711363766, 3081); } catch (e) {}
try { v51(v51, -2147483648, v51, v40); } catch (e) {}
function F58(a60, a61, a62) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(Symbol, "f", { configurable: true, set: RangeError });
    a61 >= a62;
    const v66 = Symbol;
}
const v67 = new F58(v49, -268435456, 5);
new F58(v67, v34, v67, v67);
v33 !== v48;
let v70 = 256;
5 ^ 5;
!6710 >>> v35;
v70++;
-(-2147483648);
