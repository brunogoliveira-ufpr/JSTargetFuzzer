[-16277,-4294967295,1,9007199254740991,4294967295,-268435456];
const v7 = [701129033,128,21490,504388643];
const v8 = [1592093963,2147483649,4294967295];
const v14 = new Array(16);
16 * v14;
const v16 = Array.prototype;
const v26 = [784310004,v16];
let v27 = Array;
const v29 = v27(255);
for (let v32 = 0; v32 < 5; v32++) {
    v27.__proto__;
    v27[-115489985] = v29;
    128 >>> v27;
}
switch (-20150) {
    case -1000000.0:
        break;
}
const v40 = ++v27;
0.19017189501748666 & v29;
Math.cos(v40);
~v27;
v27 || v27;
const v45 = [v26,v14,784310004,1877581954,v16];
const v46 = [v45,16,v16,-1359911438,v45];
v16[64] = Array;
const v47 = v46 > v26;
v47 ? v46 : v26;
v7[21127] ||= -3.0;
[v47,0.19017189501748666];
[v8,-65537,v8,[-1000000.0]];
new Array(2080);
new Date();
function f57() {
    return 784310004;
}
[Infinity,-4.0,0.09621297794026296,-577.2760074781743,72096.44976396044,0.2698029281890012,1e-15];
[Infinity,0.7017450677128314,-0.6861496125472826,188989.32474934915,-1.0,-1.5857780086312884e+307,-9.908982691067836,-4.801355659737476e+307];
[-0.0,2.0,-1000000000000.0,-0.0];
const v62 = new Int8Array(Int8Array, Int8Array, Int8Array);
const v63 = [-12,-37215,-9007199254740990,6,-60705,9,1073741824];
[1000,-2106386827,2147483649,-65536];
try { v63.some(v63); } catch (e) {}
v62.length;
