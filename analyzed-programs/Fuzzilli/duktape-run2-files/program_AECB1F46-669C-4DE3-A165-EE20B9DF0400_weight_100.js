[-268435456,6,-9007199254740991,-2147483647,7,-7,268435440,1616274058];
const v1 = [-4096,-56116,12,536870889,-50491,-256,28767,1859399532];
const v2 = [1073741825,7,-256,-38875,1477328525,4294967296,-9007199254740991,-4294967295,-389493076,2147483649];
[18394,21342];
[-27683,2147483647,-2,65536,-2147483648,-4294967295,-65535,-65537,10,-12];
[16,129,-6,366124600,-65536,4,-9007199254740990,-57548,2147483647,128];
const v6 = [8,65536,536870888,256,-1320944474,-65536];
[11919,-5249];
const v8 = [4746];
[-1798107340,9,256,59084];
[16,31836,-11,2147483648,-227357358,-7,20239];
[-9007199254740991,646665548];
[[v6,v1,v6],[v1],v8];
function f15() {
}
function f19(a20) {
    const o37 = {
        set a(a22) {
            [this,f15,"matchAll","byteLength"];
            [[f15]];
        },
        o(a27) {
            new a27();
            let v31 = 1000000000.0;
            Math.trunc(v2);
            v31--;
            Math.asin(v31);
            1024 && Math.atan(1024);
            return "byteLength";
        },
    };
    return o37;
}
const v38 = f19("matchAll");
const v39 = f19("dS");
const v40 = f19("dS");
const v41 = ["dS"];
["dS","byteLength"];
let v43 = 10;
for (; v43--;) {
    ("matchAll")[512];
}
[f19,v40,v38,f19];
function f51() {
    return v41;
}
const v52 = [1.0];
let v54 = undefined;
const o55 = {
};
v54 = o55;
v52.length;
f51();
f51();
v43 <= String;
const v62 = Symbol.split;
switch (Symbol) {
    case v39:
        Symbol("byteLength");
        break;
}
const v64 = (4.0)[v62];
try { v52.find(v64, v62); } catch (e) {}
