const v0 = [];
[-47929,-268435456,-1024,10,65536,-1279213301];
const v2 = [5,151042559,1520,-12,-2,35785];
const v3 = [-9007199254740990,-54749,1449226137,-13,6,-53010,21862,-2147483648];
const v4 = [1.0303305548563317e+308,3.0,Infinity,2.688108492061275,2.220446049250313e-16];
[1.7976931348623157e+308];
[2.0,-3.629872118434017e+307,-8.087042703297081e+307,4.0,-1000000.0,1.0,-1000000.0,-901078.3822997682];
let v7 = [];
++v7;
function f10() {
    return -9007199254740991;
}
function F14(a16, a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = v4;
    new Array(256);
    new Date();
    this.h = -37447;
}
new F14(4294967296, F14, v0);
function F25(a27) {
    if (!new.target) { throw 'must be called with new'; }
}
if (F14 <= 16) {
    new Uint8ClampedArray(Uint8ClampedArray, +F14, Uint8ClampedArray);
    new Uint8Array(2248, 2248);
}
let v36 = [-1024,-4096,8,-5,-661,-2,128,1569217128,53988];
-268435456 & ++v36;
const t28 = [588065.6683242572,-494.83908777208205,NaN];
t28[5] >>= 10;
new F14(-37447, v4, v3);
new F14(4294967296, v2, v2);
const v44 = [-Infinity];
~161;
function F47() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = -256;
}
let v51 = [-11,9007199254740991,-5,268435441,-9007199254740992,7,-547390662,48243,4,953648060];
v51 = "6";
new Int32Array(Array);
const o55 = {
};
new Float32Array([-5.0,-118520.82718440355,1.0203970779770092e+308,1000.0,-2.160358181931395,1000000000000.0,-2.2250738585072014e-308,0.0]);
+v44;
Math.atan(o55 ^ -9223372036854775807);
const v66 = new Uint8Array(5);
v66.b = "sort";
