const v0 = [1000.0];
const v1 = [-3.0,2.220446049250313e-16];
const v2 = [72.87048704472113,-581.7073787034528,3.5160334072047253e+307,-432.6765124748473,-766316.8158696883];
new Array(128);
const v9 = [1,536870889,16,2,24671,9007199254740992,9007199254740990,-268435456,-61351];
const v10 = [10,-256,-65537,-1742037633,8];
const v11 = [7,9,7];
class C12 extends Array {
    static get a() {
        this - this;
        let v15;
        try { v15 = v1.reduceRight(Array); } catch (e) {}
        const v16 = [v11,v0,v15,v10,v15];
        [v16,v16,v16,v16,v15];
        return [1073741825,2,this,128];
    }
    toString(a20, a21, a22) {
        var e = v11;
        v2[1];
        return 2;
    }
    #e = v9;
    14;
}
new C12();
const v25 = new C12();
const v26 = new C12();
v26[1000] = 4;
var b = v25;
[3891,10,-805015777,2];
[424916008,-956742380];
"multiline" && [-941232139,-15034,-2,4,-6,188281525,255,-1,1000];
