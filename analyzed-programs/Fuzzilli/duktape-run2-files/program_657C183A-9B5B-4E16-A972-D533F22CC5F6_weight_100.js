let v0 = [3.0,-Infinity];
[2.2250738585072014e-308,-4.0,2.2250738585072014e-308,-4.0];
[-1000.0,93.60287531196468,1.0,-1000000.0,-1.3411319999950423e+308,1e-15,-3.0,529947.3227631846,2.0,-3.0];
function f6() {
    return v0;
}
v0 <<= v0;
let v16 = +9007199254740992;
const v17 = v16++;
Math.log(v17);
v17 & "number";
v16 || 1000000.0;
function F25(a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a27;
}
new F25(1612739721, -1);
const v30 = new F25(9007199254740992, -1);
new F25(-1, 9007199254740992);
new Int32Array(1);
new Float32Array(F25);
new Int8Array(2375);
[-3.0,5.0,-5.777074971225531,1.7976931348623157e+308,Infinity];
const v48 = [2.220446049250313e-16,272514.8267656495,-5.0];
const v49 = [-3.0,5.0,-1e-15,-225820.72432852734,0.001710617311595941,5.0];
const v52 = 2375 << 0;
v49.d = v48;
[-41267,v49];
[Int32Array,v48,[v30,"1073741824"],2375];
const v61 = [v52,0,0,0];
const v63 = new Uint32Array(v61, v61[16], 16);
v63 <= 2375;
