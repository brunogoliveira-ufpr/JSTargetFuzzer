function f0() {
}
const v5 = [2147483649,null,19871,-1073741824];
const v8 = new Int8Array(2002);
const v10 = new Float32Array(v8);
[-1073741824,19871,[v5,v5]];
new Array(3);
function F19(a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a21;
    const o25 = {
        [2009686600]: 9,
    };
    a21.a = -16;
    this.f = 5;
}
const v26 = new F19(5, 1073741825);
new F19(1073741825, 1073741825, F19, v26, F19);
let v28 = new F19(-16, 1073741825);
const v31 = new Int8Array(3406);
new Int32Array(6);
new Float32Array(3406, Float32Array);
new Int8Array(1);
new Date();
[-1898451916,16,-2147483649,-775641375,9,536870889,-49325,65535,-4];
let v44 = 0;
while (v44 < 1) {
    Array.prototype &= 19871;
    !v28;
    -1073741825;
    ~9;
    Math.pow(v28--, 39171);
    v44++;
}
[Date,v31,v44,v28];
[[v10]];
[1.0006645502565743e+308,8.616280239162364,5.396425121421728e+307,421.29537881506576];
[-687081.861156207,1.5614359416843445e+308,0.3273192586106489,-6.927558305382158,-0.0,1000000.0,795879.9207914926,0.8014701348640626,-269.27796008898963];
[2.2250738585072014e-308,-0.9326610809555458,0.7921105145180536,0.44827495337067746,-631182.5821415293,-318.3100235179204,0.8839469913670925,-790.620016477325];
let v64 = 65537;
const v66 = !-16;
-16 ^ v64;
const v68 = -4.829194895972513 << v66;
v64++;
-16 % v68;
function F71() {
    if (!new.target) { throw 'must be called with new'; }
}
const v73 = new F71();
new Int8Array(v73);
const v77 = [Infinity,-5.0,-632.4306063360898,-1000000.0,-9.20078573918612,0.0,-1000.0,-1.5293837129549006e+308] ** -128;
v77 / v77;
