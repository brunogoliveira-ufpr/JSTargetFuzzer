const v1 = new WeakSet();
class C2 {
    valueOf(a4) {
        [-3.0,-1.7976931348623157e+308,-1000.0,-1000000000.0,1.390109704377413e+308,8.006503576785825];
        [3.0,0.5593317301417127,3.40596747726831e+307,1000000000.0,-1000000000000.0,989366.8712931594,-8.865900365451854,-1.0];
        return [38.84622700930072,1.7976931348623157e+308,-1.9794766705117155,1.0,5.3353150664431475,-388196.37603438227,0.9877908051957681,8.42749031311335,-1.1443605572861497e+308];
    }
    #o(a9) {
        Math.exp(-12);
        const v15 = this << -2147483647;
        Math.round(-12);
        const v17 = -12 % v15;
        Math.sign(-2147483647);
        -2147483647 - v17;
        return WeakSet;
    }
}
const v20 = new C2();
new C2();
const v22 = new C2();
function F26(a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = a28;
    this.c = a28;
}
const v31 = new F26(v20, v20, C2);
const v32 = new F26(F26, v22, v31);
new F26(WeakSet, v32, v1);
for (const v34 in v1) {
    false >= (v34 << -9007199254740991);
    v32.h = false;
    [-9];
    [583652575];
    [1000,1,-4698,-37164,-402959230,-55286,2147483649,10000,-9223372036854775807];
}
let [] = v20;
